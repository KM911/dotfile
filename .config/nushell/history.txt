rm history*
ls
yay bandwhich
bandwhich
sudo bandwhich
ls
swaymsg  -t get_tree
cd scripts/
ls
./wezterm.sh
ls
./wezterm.sh
swaymsg  -t get_tree
hello
cd .config
cd ..
vim .wezterm.lua
hello
exit
hello
swaymsg  -t get_tree
hello
nice
hello
nice
cool
exit
wezterm-mux-server 
ls
hello
ps | where mem > 100Mib
ps | where  name =~ "wezterm"
wezterm-mux-server 
ps | where  name =~ "wezterm"
hello
just do it 
exit
hello
exit
I do not know 
but 
I am super glag waht you have come 
exit
exit
swaymsg "move to scratchpad [app_id=\"org.wezfurlong.wezterm\"]"
swaymsg -t get_tree
swaymsg "scratchpad show "
swaymsg "scratchpad show"
swaymsg "move [app_id=\"org.wezfurlong.wezterm\"] to scratchpad"<\n>
swaymsg "move [app_id=org.wezfurlong.wezterm] to scratchpad"
swaymsg "[app_id=org.wezfurlong.wezterm] move to scratchpad"
swaymsg "[app_id=org.wezfurlong.wezterm] scratchpad show"
hello
right 
nice
what 
hello
nice
yes
you are right 
exit\
exit
ps | where  name =~ "wezterm"
he
hello
python back.py
z dotfile
python back.py
pip install rich 
ls
python back.py
cd .config
ls
cd foot
ls
cd ..
rm -rf foot
ls
rm -rf foot 
sudo rm -rf foot 
ls
cd ..
cd dotfile/
ls
python back.py
cd sway 
rm -rf .config
sudo rm -rf .config
mkdir .config
python back.py
git push 
yay 
poweroff
poweroff 
exit
docker start mysql redis clickhouse
pp
which pp 
pc
go get github.com/KM911/fish
make 
python make.py
cd target
ls
./pc
cd ..
make.py
./make.py
python make.py
./target/pc
rm /usr/bin/pc
sudo rm /usr/bin/pp
sudo rm ./target
ls
sudo rm -r ./target
python make.py
args
go mod tidy 
hello 
sudo chmod +x make.py
./make.py
his
history
history --help
hestory | 10
history | 10
history | length
history | last 5
history | last 5 >> log
history | last 5 | save -f log
history | last 5 | get command|  save -f log
ls
vim log
rem 
rem
rember
rem 
make.py
./make.py
rem echo hello
./make.py
ls
rem echo hello
./make.py
./rem hello
./rem echo hello
./rem docker
./rem docker images
which which
./make
./make.py
./rem
hotpot -e rem
hotpot 
hotpot -e ./make.py
hotpot e ./make.py
./make.py
./rem
./rem echo he
./rem hello
./rem
./rem hello
./rem echo hello
./rem docker images
hotpot w
./make.py
./rem docker images
./rem docker
./rem docker image
./rem docker images
./rem docker 
./rem shh
./rem ssh
./rem hello
./rem echo hello
./make.py
./rem echo hello
./rem docker images
./rem sudo vim /etc/environment
rm -rf static/
go mod tidy 
./make.py
go mod init bin
go mod tidy
./make.py
ls
./rem sudo vim /etc/environment
bash
cd .cache
ls
mkdir fish
cd fish
ls
./make.py
./rem sudo vim /etc/environment
ls
cd ..
cd tools
cd .cache
cd tools
ls
rm remember.db/
touch remember.db
./rem sudo vim /etc/environment
./make.py
./rem sudo vim /etc/environment
code /home/km/.cache/tools/remember.db
go build 
./tools 
./tool sudo vim /etc/environment
./tools sudo vim /etc/environment
go build 
./tools sudo vim /etc/environment
sys mem 
bash
sys cpu
sys cpu | get cpu_usage
sys cpu | get names
ps | get name
ps | get name | rofi -dmenu 
ret
go run main.go
go run .
go run . | rofi -dmenu
go run . | rofi -dmenu | echo 
go run . | rofi -dmenu | wl-copy
go run . | rofi -dmenu | cliphist decode | wl-copy
cliphist list
rem echo hello
ls
z tools
ls
sudo mv rem /usr/bin/rem
rem echo hello
rem hello
ret
mv ret /usr/bin/ret
sudo mv ret /usr/bin/ret
ls
generate 
1548433385
nice
yay --noconfirm key map
keyd
sudo keyd
cd /etc/keyd
ls
touch default.conf
ls
sudo vim default.conf
sudo keyd
sudo vim default.conf
keys
sudo vim default.conf
sudo keyd
man keyd
sudo vim default.conf
sudo keyd
sudo vim default.conf
sudo keyd
z keyd
ls
vim default.conf
ls
sudo vim default.conf
sudo keyd
yay --noconfirm key remap
yay --noconfirm key remap wayland
yay --noconfirm keymonad
go build 
pkill showkeys
./vercanium market
go build 
ps 
ps | where  name =~ "wezterm"
ls
vim log
bash
ps | where  name =~ "foot"
eww
eww open
eww 
eww ing
eww ping
ps | where  ppid =~ 141403
ps | where  ppid = 141403
ps | where ppid == 141403
ps | where ppid = "141403"
ps | where ppid ==141403
ps | where ppid = 141403
yay --noconfirm key map
yay --noconfirm key remap
wev
yay wev
wev
wev --help
sudo wev 
wev --help
ls
file
sudo file 
pacmanfm
sudo pacmanfm
file
start 
pkexec pacmanfm
pkexec file
yay --noconfirm evremap
`sudo evremap list-devices`
sudo evremap list-devices
ls
rm log
ls
cd .config
ls
mkdir remap
ls
cd rempa
cd remap/
ls
touch config.toml
z github]
ls
z github
ls
git clnoe --depth=1 https://github.com/M8850/Evremap-GUI.git
git clone --depth=1 https://github.com/M8850/Evremap-GUI.git
ls
cd Evremap-GUI/
ls
pnpm 
yay pnpm 
node -v
yay --noconfirm pnpm 
pnpm install 
npm install 
npm config get registry
npm config set registry=https://registry.npmmirror.com
pnpm config set registry=https://registry.npmmirror.com
pnpm install .
ls
pnpm run tauri dev
reboot 
docker start mysql redis clickhouse
z github
ls
git clnoe --depth=1 https://github.com/uber-go/zap.git
git clone --depth=1 https://github.com/uber-go/zap.git
cd zap
code .
go mod tidy 
go run main.go 
cd benchmarks/
ls
go bench .
go test 
go test -bench ,.
go test -bench .
ls
m go bench 
m go bench .
go mod tidy 
go run main.go 
go run main.go
go mod tiyd 
go mod tidy 
go run main.go 
ls
cd ..
cd KM911/
ls
z
z notebook
ls
vim nutstore.py
not problme 
exit
yay -R kvantum
manjaro-sway-theme 
manjaro-sway-settings
yay -Runc kvantum
ls
z dotfile
ls
cd script/
ls
./clean-yay
sudo clean-yay 
rofi-wayland
rofi
./clean-yay
sudo clean-yay 
yay --noconfirm
reboot 
ps | where mem > 100Mib
ps | where mem > 10Mib
ps -i 1830
ps -l 
ps -l  | where mem > 10
ps -l  | where mem > 10Mib
rofi
rofi 
which rofi 
yay --noconfirm rofi 
yay --noconfirm wofi
yay --noconfirm rofi 
rofi
wofi -drun 
wofi -dmenu
wofi help
wofi --help
wofi --show-drun
wofi show
wofi --show
wofi --show-drun
wofi --show-run
wofi --help
wofi --show drun
wofi  --gtk-dark --show drun
ls
sway 
waybar
yay manjaro theme 
yay manjaro sway theme
yay --noconfirm manjaro theme
waybar
keyd-application-mapper 
keyd
sudo keyd
keys
wev
cd .config
ls
cd keys
cd remap
ls
vim config.toml
why 
yay 
yay manjaro sway 
swaymsg reload
waybar 
reboot 
n
yay neofetch 
flashfetch 
fastfetch 
file /usr/bin/fastfetch
file /usr/bin/neofetch
yay neofetch 
neofetch
lscpu
yay neofetch 
hyperfine 
hyfetch 
which hyfetch
file /usr/bin/hyfetch
vim /usr/bin/hyfetch
hyfetch 
neofetch
grub 
cd /etc
cd grub.d/
ls
cd ..
ls
ls | where name  =~ "grub"
cd grub.d/
ls
cd ..
ls
cat /etc/sysconfig/kernel
cd /etc
cd sysconfig/
ls
vim crond
cd /etc
cd default/
ls
vim grub
sudo vim grub
sudo update-grub
reboot 
neofetch
systemctl status docker 
systemctl --help
systemctl show docker
systemctl show sway
cd ..
cd go
ls
fd string
cd ..
fd string
cd go
cd go-std/
ls
code .
ls
cd ..
cd code
cd km
ls
cd go
ls
rm-rf go-std
rm -rf go-std
ls
z bench
ls
pp
exit
ls
rm *.log
ls
rm bin
rm bench
ls
cd benchmarks/
go test -bench .
cat test.log
ls
cd format
cat test.log
open test.log
github-desktop 
ls
cd ..
ls
cd cli
cd ..
cd go/cli
ls
cd go
cd clickhouse/
cd ..
fd 
ls 
cd cmd
ls
go run main.go 
cd ..
ls
mkdir cli 
ls
cd cli
lc
cd ..
ls
cp -r ./template ./cli
cd cli
ls
cd mm
cd ..
cp -r ./template ./cli
ls
cd cli
ls
cat main.go 
code .
go mod tidy 
cd ..
ls
cd lib
ls
cd ..
rm -rf lib
ls
cd ..
cd go
ls
mkdir gen 
ls
rmdir gen
cp -r ./template ./gen
ls
cd gen
code .
go mod tidy 
hotpot init 
pp
p 
pc
2 ** 5
16 * 8
16 * 4
0x20
0x40
0x80
0x60
255 - 32
223 % 16
223 / 16
hotpot w
m go bin
go build -o gen
go mod tidy
go build -o gen
m go bin
gen
go build -o gen
m go bin
go get github.com/KM911/fish
go run main.go 
go run main.go
go build -o gen
m go bin
gen 
sudo go build -o /usr/bin/gen
go build -o gen | sudo mv gen /usr/bin/gen
go build -o gen && sudo mv gen /usr/bin/gen
go build -o gen ; sudo mv gen /usr/bin/gen
gen
go mod tidy
go build -o gen ; sudo mv gen /usr/bin/gen
gen
go build 
./bin
./bin 
go build 
./bin
go build 
./bin
go build 
./bin
go build 
./bin
./bin args 
./bin args  1
./bin args  123423423
./bin 
gen
z hotpot\
z hotpot 
ls
gen
gen 
go mod tidy 
ls
cd ..
ls
cp -r ./cli ./gen
go mod tidy 
gen
ls
rm bin
ls
which cli
go mod tidy
go build 
ls
./bin
go build 
./bin
go build 
./bin
./bin cli
go build -o gen ; sudo mv gen /usr/bin/gen
gen cli
gen 
go run main.go 
go mod tidy 
go run main.go
go build -o hotpot ; sudo mv /usr/bin/hotpot 
go build -o hotpot ; sudo mv hotpot /usr/bin/hotpot 
hotpot e 
hotpot e  go run main.go 
go build 
go run main.go 
python version
python v
python -v
go run main.go 
exit
startship 
starship
starship prompt
starship prompt | save -f log
starship --help
starship module
starship module  package
starship module  go
starship module  --list
starship module golang
starship module python
starship module rust
hotpot init
starship module csharp
starship module cpp
starship module c
starship module --list | save -f log
ls
cd ..
ls
exit
go run main.go 
./a.out hello just do tit 
go run main.go 
gen cli
gen
gen cli
yay 
gen 
gen cli
go build -o gen ; sudo mv gen /usr/bin/gen
gen cli
go build -o gen ; sudo mv gen /usr/bin/gen
gen cli
go run main.go cli
go build -o gen ; sudo mv gen /usr/bin/gen
gen cli
go build -o gen ; sudo mv gen /usr/bin/gen
gen cli
go build -o gen ; sudo mv gen /usr/bin/gen
gen cli
gen cli args 
cd 
cd go
ls
cd pkg
ls
cd mod
ls
cd github
ls
cd cache
ls
cd download/
ls
cd github.com/
ls
rm -rf  !k!m911/
ls
exit
go mod tidy
go run main.go 
go build 
./bin
rm bin
ls
cd ..
ls
cd ttemplate
cd template
ls
cat main.go
cd ..
ls
gen
z gen
go build -o gen ; sudo mv gen /usr/bin/gen
ls
mkdir test
cd test
ls
gen init 
gen  init gen-test
ls
rm go.mod
ls
cd gen-test/
ls
fd 
code .
cd ..
ls
mkdir embed 
rmdir embed 
cp -r ./template/ embed 
cp -r ./template/ go=template
ls
cd embed 
ls
code .
go run main.go
hotpot init
hotpot e go run maing.o
hotpot e go run main.go
ls
exit
cd ..
cd go=template/
code .
go run main.go
go build 
./bin
go build 
./bin
mv index.html index
./bin
ls
mv index index.html
ls
./bin
ls
go run main.go 
tree
bash
tree 
.
tree
yay tree 
tree | wl-copy
ls
cd ..
cdl
cd go=template/
code .
go rum main.go
go run main.go 
go run main.go
go run maing.o
go run main.go
go mod tidy 
go run main.go
go run main.go gen
go run main.go cli
z gen
ls
go run main.go cli
go build 
./bin
./bin cli
go run main.go cli
git init 
git add * 
git commit --amend 
ps -l  | where mem > 10Mib
ps | where mem > 10Mib
ps | where mem > 100Mib
htop
top
bottom
btm
bashtop
ls
cd /temp
cd /tmp
ls
rm test12651927641
ls
docker start mysql redis clickhouse
pp
pc
go build 
gitlog
exit
ls
ps 
ps | where mem > 100Mib
ps | where mem > 100Mib | math sum 
ps | where mem > 100Mib | group name
ps | where mem > 100Mib | group 1
ps | where mem > 100Mib | group 2
ps | where mem > 100Mib | group 3
ps | where mem > 100Mib | group 10
ps | where mem > 100Mib | group 10 | get 1 
ps | where mem > 100Mib | head 10 
ps | where mem > 100Mib | group 10 | get 1 
ps | where mem > 100Mib 
ps | where mem > 100Mib | group 10 | get 2 
range 10- 20 
ps | where mem > 100Mib | select name mem 
ps | where mem > 100Mib | select name mem  | math sum 
ls
sad 
$ go install github.com/kevwan/tproxy@latest
z github
ls
git clone --depth=1 https://github.com/Cute-Dress/Dress.git
ls
cd Dress/
ls
r
code /home/km/Nutstore Files/Notebook/.
ls
cd 
cd `Nutstore Files/`
cd Notebook/
ls
cd .obsidian/
ls
code .
cd ..
fd NSCon
fd .
fd 冲突
exit
cd ..
code .
mkdir test
cd test
gen init test-cli
cd ..
go build -o gen ; sudo mv gen /usr/bin/gen
cd gen
ls
cd test
ls
gen init test-cli
cd ..
go build -o gen ; sudo mv gen /usr/bin/gen
cd test
rm -rf * 
ls
gen init test-cli
ls
pwd 
cd ..
go build -o gen ; sudo mv gen /usr/bin/gen
cd test
rm -rf * 
gen init test-cli
ls
rm -rf * 
gen init test-cli
ls
rm -rf * 
go build -o gen ; sudo mv gen /usr/bin/gen
gen init test-cli
go build -o gen ; sudo mv gen /usr/bin/gen
rm -rf *
gen init test-cli
rm -rf *
gen init test-cli
go build -o gen ; sudo mv gen /usr/bin/gen
rm -rf *
ls
gen init test-cli
rm -rf *
gen init test-cli
go build -o gen ; sudo mv gen /usr/bin/gen
go run main.go
gen init test-cli
ls
gen init test-cli
go build -o gen ; sudo mv gen /usr/bin/gen
exit
gen
exit
go run main.go
yay 
poweroff 
ls
docker start mysql redis clickhouse
ls
cd .config
cd code
cd Code/
lks
ls
cd ..
fd Code/
fd code
cd flags
fd flags
mv back_code-flags.conf code-flags.conf
ls
vim code-flags.conf
go build 
mysql 
mysql -u root 
mysql -u root -p
ls
z go
cd .
cd 
cd code
cd go
ls
mkdir rpc 
cd rpc
ls
cd ..
rmdir rpc
z benchmakr
ls
z bench
ls
code .
./vercanium market
git add *
git stash 
git switch master 
git pull 
gitui
git switch develop
git rebase master 
gitui
git push 
gitui
alias
ls
cd ..
cd cgo
cd go
cd rpc
ls
cd rpc
ls
cp -r ./template/ rpc
cd rpc
code .
go run main.go 
sudo lsof -i:3000
cd ..
gen rpc-capture
gen init rpc-capture
cd rpc-capture/
code .
go build 
ls
./rpc-capture cap
gen cli
go build 
./rpc-capture cap
./rpc-capture rpc
go build 
./rpc-capture rpc
./rpc-capture cap
go build
./rpc-capture cap
./rpc-capture rpc
go build
./rpc-capture cap
./rpc-capture cap
./rpc-capture rpc
hotpot init 
hotpot w
./rpc-capture rpc
hotpot w
./rpc-capture rpc
rproxy 
go install github.com/zeromicro/go-zero/tools/goctl@latest<\n>
$ go install github.com/kevwan/tproxy@latest
go install github.com/kevwan/tproxy@latest
gen cli
hotpot w
go build 
./rpc-capture rpc
tproxy -p 3001 -r localhost:300 -t grpc -d 100ms
tproxy -p 3001 -r localhost:300  -d 100ms
./rpc-capture rpc
tproxy -p 3001 -r localhost:300 -t rpc -d 100ms
tproxy -p 3001 -r localhost:300 -t tpc -d 100ms
./rpc-capture rpc
./rpc-capture rs
go build 
tproxy -p 3001 -r localhost:3000 -t tpc -d 100ms
./rpc-capture rpc
./rpc-capture rs
go build 
tproxy -p 3001 -r localhost:3000 -d 100ms
tproxy
goctl
ls
cd ..
ls
gen init go-zero
cd go-zero
ls
goctl api -o shorturl.api
ls
cd ..
ls
git clone --depth=1 https://github.com/zeromicro/zero-examples.git
ls
cd zero-examples/
code .
cd shorturl/
code .
go build 
go build  .
go buiid ../
go run transform.go -f etc/transform.yaml
go run transform.go -f ./etc/transform.yaml
cd rpcl
ls
cd rpc
ls
cd transform/
ls
go run transform.go -f ./etc/transform.yaml
curl -i "http://localhost:8888/shorten?url=http://www.xiaoheiban.cn"
ls
fd greet
cd rpc
cd remote
ls
cd unary/
ls
git push 
gitui
cd ..
ls
mkdir zero
lg
cd  zero
ls
goctl api new demo
ls
cd demo
ls
cdoe .
code .
go run .
go mod tidy 
go run main.go 
cd 
cd .config
cd obsidian/
ls
fd GPU
rm -rf Partitions/surfing-vault-6096c13e1403409b/GPUCache/
ls
fd GPU
rm -rf GPUCache/
ls
cd GPUCache/
ls
rm -rf * 
ls
nvtop
inix -G 
inxi -G
yay 
netstat -napt
sudo netstat -napt
yay netstat
netstat -napt
ls
exit
exit
ls
cd /etc
ls
fd sysctl
cd sysctl.d/
ls
z github
ls
git clone --depth=1 https://github.com/yurihikari/garuda-sway-config.git
cd garuda-sway-config/
ls
code .
yay alacritty
yay --noconfirm -S alacritty
ls
cp -r neofetch/ ~/.config
ls
neofetch
neofetch 
neofetch
cd 
cd .config
ls
cd neofetch
code .
neofetch
info 
neofetch
micro
yay micro
nwg-drawer
ls
cd ..
cp -r nwg-wrapper/ ~/.config
cp -r nwg-launchers/ ~/.config
z github
ls
cd garuda-sway-config/
ls
cd .config
cd config
ls
cp -r nwg-launchers/ ~/.config
cp -r nwg-look/ ~/.config
cp -r nwg-icons/ ~/.config
cp -r nwg-icons ~/.config
cp -r nwgbar-icons ~/.config
cp -r nwg-look ~/.config
nwg-wrapper 
nwg-wrapper  --help
man nwg-drawer
man nwg-warpper
man nwg-wrapper 
nwg-wrapper 
yay --noconfirm -S nwg-drawer
man nwg-drawer
nwg-drawer help
nwg-drawer --help
nwg-launchers
cd ..
cd 
nwg-wrapper 
nwg-launchers
yay --noconfirm  nwg-drawer
wofi  --gtk-dark --show drun
wofi  --show drun
wofi --show drun
wofi 
wofi --show 
wofi --show drun 
wofi --show run
cd 
cd .config
cd wofi
ls
exit
z github
cd ga
cd garuda-sway-config/
ls
cp -r wofi ~/.config/wofi
cd wofi
ls
wofi --show run
wofi --show drun
reboot 
ls
z github
ls
cd garuda-sway-config/
ls
code .
ls
wofi --show drun
wofi --help
wofi --show -icons
wofi --show drun  --allow-image
hotpt
exit
ls
cp -r gtk-3.0/ ~/.config
ls
cd .config
cd 
cd .config
ls
cp -r rofi/ ~/.config
cd rofi
ls
cd basic
ls
./install.sh
exit
cd 
cd .config 
rm -rf fish 
cp -r fish ~/.config
ls
hello
exit
pwd
who 
who you are
ls
hello
exit
cava
cp -r cava ~/.config
wob
wob --help
cd wob
ls
cp -r wob ~/.config
yay cava
cava
cave
cava
ls
cd .config
ls
who
ps 
ps | where name =~ "ala"
ls
hello
cool
exit
alacritty 
cava
echo 43 > /tmp/wobpipe
ls
echo 43 > /tmp/wobpipe
bas h
bash
exit
wob
wob --help
ps | where name =~ "wob"
pkill wob
sudo pkill wob
cd ..
cd wob
ls
r
pkill sway 
ls
wob
ls
cd .config
ls
vim wob/
man wob
cd wob
ls
vim wob.ini
rm default.ini
ls
mkfifo /tmp/wobpipe
tail -f /tmp/wobpipe | wob
echo 43 > /tmp/wobpipe
bash 
tail -f /tmp/wobpipe | wob
wob
~/.config/sway/scripts/wob.sls
~/.config/sway/scripts/wob.sh 
bash
exit
bas h
ls
cd wob.ini
ls
cd ..
ls
cd wob
cd .config
cd wob
ls
cat wob.ini
cp wob.ini default.ini
ls
bash
ps | where name =~ "wob"
tail -f "$wob_pipe" | wob -c $ini &
cd ..
cd sway
ls
cd scripts/
ls
./wob
./wob.sh
bas h
cd scripts/
ls
cp -r wob ~/.config
ls
wob
neofetch
nwg-drawer 
nwg-wrapper 
bash 
mkfifo /tmp/wobpipe
ls
./brightness.sh up
sh -c "$(curl -fsSL https://raw.githubusercontent.com/Battlesquid/dotfiles/main/install.sh)"
ps | where name =~ "waybart"
ps | where name =~ "waybar"
ls
pwd 
nemo
yay nemo
nemo
yay --noconfirm Thunar
nemo
sudo nemo
pkexec nemo
nemo
xhost nemo
yay xhost
yay --noconfirm -S xhsot
yay --noconfirm -S xhost
cd .confgi
cd .config
cd gtk-3.0/
ls
cd ..
cd gtk-4.0/
ls
vim gtk-dark.css
ls
vim settings.ini
ls
fd ~
fd ~ .
ls
ll assets
ls -l 
cd ..
cd gtk-4.0/
ls
cd ..
cd gtk-3.0/
ls
cd ..
ls
cd ..
cd .config
ls
start .
cd /etc
ls
cd gtk-3.0/
ls
cd ..
cd gtk-3.0/
ls
vim im-multipress.conf
ls
cp -r ~/.config/gtk-3.0 /etc
sudo cp -r ~/.config/gtk-3.0 /etc
ls
pls
ls
cd ..
ls
fd theme
fd css
xdg 
cd xdg
ls
cd Thunar/
ls
vim uca.xml
ls
cd ..
ls
vim user-dirs.conf
ls
cd waybar/
ls
vim config.jsonc
ls
cd ..
cd waybar
ls
vim config.jsonc
ls
cd ..
ls
cd pcmanfm/
ls
vim default/
ls
cd ..
ls
nemo
ls
cd /etc
ls
ls
rm -rf waybar
ls
sudo rm -rf waybar
ls
cd foot
ls
rm -rf * 
ls
cd ..
ls
cd ..
cd 
cd .config
cd Thunar/
ls
vim uca.xml
cat uca.xml
ls
cd ..
ls
cd wob
ls
code .
pkill wbo
tail -f /tmp/wobpipe | wob
pkill wob
wob
ls
cd /tmp
ls
cat wobpipe
tail -f /tmp/wobpipe | wob
reboot 
ls
cd ..
cd sway
code .
cat /tmp
cd /tmp
fd wob
tail -f /tmp/wobpipe | wob
ls
tail -f /tmp/wobpipe | wob
cd scripts/
ls
./wob.sh
pkill wob
reboot 
man sway 
ls
sudo rm autostart
waybar
pkill sway 
man sway
man 5 sway 
pkill sway 
pkill waybar
pkill sway
waybar
cd scripts/
once
./onec
once.sh
./once.sh
./once.sh  waybar
pgrep waybar
ls
pgrep /usr/bin/waybar
./once.sh  /usr/bin/waybar
/usr/bin/waybar
ls
ls
cd .config
cd sway
cd scripts/
ls
./once.sh  /usr/bin/waybar
./once.sh  waybar
pgrep /usr/bin/waybar
pgrep -f waybar
pgrep  -l -f waybar 
pgrep  -l  waybar 
./once.sh  waybar
ls
./once.sh  waybar
pgrep  -l  waybar 
pgrep  -l -f   waybar 
pgrep  -l -f "/usr/bin/waybar"
./once.sh  waybar
./once.sh  /usr/bin/waybar
pgrep  -l -f "/usr/bin/waybar"
bash
z go
ls
gen init once
cd once
ls
code .
go run  main.go
go build 
ls
./once
./once hello
go run main.go
go mod tidy 
pgrep  -f "/usr/bin/waybar"
pgrep  -f waybar
pgrep -l -f waybar
pgrep -l -f /usr/bin/waybar
go build 
./once waybar
go build 
./once waybar
go run main.go 
go build 
./once waybar
go build 
./once waybar
go build 
ls
./once waybar
go build ; sudo mv once /usr/bin/once
pkill waybar
mako
once mako
wob
once wob
pkill sway 
once fcitx
/usr/bin/fcitx5
notify-send hello
wl-clip-persist 
wl-clip-persist  --help
wl-clip-persist  --server
cliphist
go build ; sudo mv once /usr/bin/once
wl-paste --watch waybar-signal clipboard
sworkstyle
wl-paste
once clash-verge
wl-paste --watch cliphist store
ls
echo hello
pkill sway 
ls
cd scripts/
./weather.py
once waybar
exit
grep -f /usr/bin/waybar
pgrep -f /usr/bin/waybar
ps | where name =~ "waybar"
ps -l | where name =~ "waybar"
which waybar
exit
pkill waybar
ls
exit
ps -l | where name =~ "waybar"
grep -f /usr/bin/waybar
pgrep -l -f /usr/bin/waybar
pgrep -l -f way
pgrep -l -f waybar
pgrep --list -f waybar
pgrep -a -f waybar
ps -l | where name =~ "waybar"
ps -l | where name =~ "sh"
pgrep -f waybar
pgrep -f /usr/bin/waybar
pgrep  /usr/bin/waybar
pgrep /usr/bin/waybar
go build ; sudo mv once /usr/bin/once
pkill waybar
pkill sway 
pgrep /usr/bin/waybar
pgre waybar
pgrep waybar
pgrep -a waybar
pgrep -a /usr/bin/waybar
go build ; sudo mv once /usr/bin/once
pkill waybar
once waybar
grep -f /usr/bin/waybar
pgrep -f /usr/bin/waybar
which clash-verge
once clash-verge
grep -f /usr/bin/clash-verge
pgrep -f /usr/bin/clash-verge
ps -l | where name =~ "clash"
which clash-verge
file /usr/bin/clash-verge
ls -l /usr/bin/clash-verge
pkill waybar
clash-verge --help
clash-verge
ps -l | where name =~ "auto"
which autotiling
ls -l autotiling
ls  /usr/bin/autotiling
ls -l  /usr/bin/autotiling
once /usr/bin/autotiling
autotiling
once /usr/bin/autotiling
go build ; sudo mv once /usr/bin/once
ls
exit
pkill autotiling
ps -l | where name =~ "waybar"
pkill waybar 
pgrep --help
once waybar
pkill waybar
pgrep -x /usr/bin/waybar
once waybar
pgrep -f /usr/bin/waybar
go build ; sudo mv once /usr/bin/once
clash 
clash-meta
reboot 
ping google.com
once clash-meta
pkill clash-meta
clash
ls
vim /etc/environment
ls
cd .config
cd clash
ls
vim config.yaml
ls
vim config.yaml
ls
clash
clahs -c 
clash --help
clash -f ~/.config/clash/config.yaml
vim config.yaml
clash-meta -f ~/.config/clash/config.yaml
ps -l | where name =~ "waybar"
ps -l | where name =~ "clash"
clash-verge
clash-meta  -f ~/.local/share/io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml
clash-meta -d ~/.local/share/io.github.clash-verge-rev.clash-verge-rev -f ~/.local/share/io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml<\n>
ls
exit
once clash-meta -d ~/.local/share/io.github.clash-verge-rev.clash-verge-rev -f ~/.local/share/io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml<\n>
go build ; sudo mv once /usr/bin/once
once clash-meta -d ~/.local/share/io.github.clash-verge-rev.clash-verge-rev -f ~/.local/share/io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml<\n>
notify-send hello
pkill sway 
ls
exit
journalctl 
journalctl  --help
cd /run/log
ls
cd journal/
ls
cd /run/log
ls
cd journal/
ls
cd ..
ls
fd journal/
ls
cd ..
ls
journalctl --help
man swayrd
swayrd --help
swayrd
once swayrd
yay --noconfirm 
ls
journalctl --help
journalctl -S=7
journalctl -S=0705
reboot 
journalctl -r
sudo rm  /run/log/journal/* 
sudo rm /run/log/journal/* 
ls
cd /run/log
cd journal/
ls
sudo su
journalctl --disk-usage<\n>
journalctl --vacuum-time=1d<\n>
cd /var/log/journal/
ls
rm * 
sudo rm * 
ls
sudo rm -rf *
journalctl 
foot-clinet
foot-client
footclinet
footclient
foot
exit
once tail -f /tmp/wobpipe | wob &<\n>
echo 23| wob
echo 23 >> wob
bash
exit
fish 
ps -l | where name =~ "wob"
pkill wob
man way-displays
dex
nwg-wrapper
cd .config
cd rofi
code .
notify-send hello
notify-send just
notify-send do
it
ps -l | where name =~ "wob"
pkill wob
pgrep wob
~/.config/sway/scripts/wob.sh 
pgrep wob
ps -l | where name =~ "wob"
ls
cd .config
cd sway
ls
cd scripts/
ls
pp wob
pc wob.sh
/home/km/.config/sway/scripts
/home/km/.config/sway/scripts/wob.sh
pgrep "wob"
pgrep wob
/home/km/.config/sway/scripts/wob.sh
pgrep wob
pgrep -f wob
pgrep -a -f wob
pkill tail
/home/km/.config/sway/scripts/wob.sh
pkill tail
ps -l | where name =~ "wob"
ps -l | where name =~ "tail"
ls
wob.sh
./wob.sh
ls
ps -l | where name =~ "tail"
ps -l | where name =~ "wob"
exit
./wob.sh
cd scripts/
./wob.sh
pkill tail
pkill wob
/home/km/.config/sway/scripts/wob.sh
exit
poweroff
KEYS
keys
ls
term
once foot --server
exit
foot
bluetuith 
ls
networkctl 
netui
nmtui
reboot 
networkctl 
exit
ls
exit
poweroff 
ls
calcurse
calcurse
~/.config/sway/scripts/help.sh --toggle
exit
pgrep swayrd
pgrep -a swayrd
swayrd --help
flashfocus --help 
pgrep -a flashfocus
kill 1675
exit
pgrep -a flashfocus
wl-clip-persist --help
wl-clip-persist --help 
wl-clip-persist -d
wl-clip-persist
yay 
bluemoon
bluetoothctl 
z sway 
ls
cd modes/
ls
nvim style
go build 
./gen 
ls
./bin
how stupid 
how stupid it is 
exit
vim default
exit
yay --noconfirm 
ls
cd sys
cd /sys
cd class
ls
cd hwmon/
ls
cd hwmon6/
r
yay --noconfirm 
reboot 
ls
gpre clash 
pgrep -a clash
pgrep -a clash-meta
once clash-meta -d ~/.local/share/io.github.clash-verge-rev.clash-verge-rev -f ~/.local/share/io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml
gen 
which clash
which clash-meta
which clash-mate
pgrep clash-verge 
pgrep clash-verge
pgrep -a clash-verge
pgrep -f clash-verge
pgrep -f  clash-verge
which clash-mate
which clash-verge
yay --noconfirm nvim
rem list 
rem 
yay --noconfirm neovim 
rem --help
rem 
ps -l | where name =~ "clash"
which clash-verge
exit
git clone https://github.com/LazyVim/starter ~/.config/nvim
cd nvim
nvim
ls
cd nvim
ls
cd .config
rm -rf nvim
git clone https://github.com/LazyVim/starter ~/.config/nvim
neovim
nvim
ls
nvim user-dirs.dirs
ls
file /usr/bin/vim
rm /usr/bin/vim 
sudo rm /usr/bin/vim 
z /usr/bin/
cp -l /usr/bin/nvim /usr/bin/vim
bash 
ls
ls
z go
z gen
z once
ls
vim main.go
r
ls
cd app
ls
pgrep clash-verge
pgrep /usr/bin/clash-verge
pgrep -f  /usr/bin/clash-verge
vim app.go
go build 
sudo mv once /usr/bin/once
once clash-verge
ls
z work
ls
cd vercanium/
ls
vim main.go
ls
z vercanium
ls
cd system
touch process_test.go
go mod tidy 
go mod tidy
exit
pgrep vscode
pgrep -a vscode
pgrep -l vscode
which vscode
pgrep -f vscode
pgrep -a -f vscode
ps -l | where name =~ "code"
which code
which code
pgrep -f ""
cd syst
cd system
reboot 
ls
once waybar
pgre -f waybar
pgrep -f waybar
pgrep  waybar
pgrep  -a waybar
pgrep  -a -f waybar
once clash-verge
once waybar
pgrep -f waybar
pgrep -f clash-verge
pgrep -f /usr/bin/waybar
ps | where name =~ "waybar"
ps -l | where name =~ "waybar"
ps -l | where name =~ "clash-verge"
once waybar
notify-send just
pgrep -f /usr/bin/waybar
go build ; sudo mv once /usr/bin/once
once waybar
pgrep -f waybar 
go build ; sudo mv once /usr/bin/once
once waybar
go build ; sudo mv once /usr/bin/once
once waybar
once clash-verge
gprep -f clash-verge
pgrep -f clash-verge
pgrep -a -f clash-verge
once clash-verge
once waybar
go build ; sudo mv once /usr/bin/once
once waybar
ps | where pid = 12990
ps 
ps -i 12990
bash
go build ; sudo mv once /usr/bin/once
once waybar
go build ; sudo mv once /usr/bin/once
once waybar
go build ; sudo mv once /usr/bin/once
once waybar
waybar
once waybar 
waybar
once waybar 
go build ; sudo mv once /usr/bin/once
once waybar
go build ; sudo mv once /usr/bin/once
once 
once waybar
exit
reboot 
notify-send just
exit
go build 
sudo mv once /usr/bin/once
once waybar
once clash-verge
once code
once /usr/bin/code
dex
cava
weather 
cd .config
ls
cd sway 
cd scripts/
ls
./weather.py
exit
ssh root@21123.12.12
ssh root@21.123.12.12
ssh root@21.123.12.12 -p
ssh root@21.123.12.12 
ssh root@22.123.12.12 
ssh root@87.123.12.12 
swayidle 
swayidle  -w timeout 10
log out
logout
ls
swayidle
swayidle --help
swayidle -w timeout 10 echo hello
swayidle -w timeout 10 "echo hello"
swayidle -w timeout 5 "echo hello"
swaylock
ls
z 
cd .config
cd swaylock
ls
cd ..
ls
mkdir github 
ls
cd github
ls
git clone --depth=1 https://github.com/catppuccin/swaylock.git
cd swaylock/
ls
cd .confgi
cd 
cd .config
ls
cd swaylock/
ls
mkdir swaylock
ls
r
cd themes/
ls
cp mocha.conf ~/.config/swaylock/config
ls
cd swaylock/
swaylock
ls
cd ..
ls
swaylock
swayidle -w timeout 5 "echo hello" resume "echo back"
vim swaylock.tera
brightnessctl 10
brightnessctl set 10
swayidle -w timeout 5 "brightnessctl set 10" resume "brightnessctl set 80"
swayidle -w timeout 5 "brightnessctl set 10" resume "brightnessctl set -r"
swayidle -w timeout 5 "brightnessctl set 10" resume "brightnessctl -r"
brightnessctl  -r 
brightnessctl set 240
brightnessctl set 220
brightnessctl -s
brightnessctl -r
swayidle -w timeout 5 "brightnessctl -s && brightnessctl set 10" resume "brightnessctl -r"
la
gprep -f swayidle
pkill swayidel
pkill swayidle
notify-send just
which notify-send
go build ; sudo mv once /usr/bin/once
pkill swayidle
swaylock
pkill swayidle
zeit
exit
reboot 
swaylock
ls
cd Screenshots/
ls
r
notify-send --help
notify-send -i 
notify-send -i obsidian hello 
notify-send -i code hello 
notify-send -i /usr/bin/code hello 
notify-send -i google hello 
notify-send -i feishu hello 
notify-send -i Feishu hello 
notify-send -i foot hello 
notify-send -i apifox hello 
notify-send -i /usr/bin/apifox hello 
notify-send -i apifox hello 
cava
n
neofetch
ls
cd ..
ls
cd .config/nushell
ls
vim env.nu
c
cave
ceva
n
cava
c
exit
c
ls
exit
ls
ls
n
exit
exit
ls
exit
gitui
go build 
docker ps -a
docker ps -a 
z rust
ls
cd ..
ls
cd ..
cd 
ls
cd code
cd rust
ls
cd tokio-example/
ls
cargo run 
cd ..
ls
cargo new cmd
ls
cd cmd
ls
exit
exit
ls
z 
du 
dust
cd .cache
ls
dust 
ls
exit
ls
cd data
ls
cd mysql
ls
cd ..
ls
cd Library/
ls
cd ..
cd Downloads/
ls
cat dzg.pdf
r
ls
cp dzg.pdf 1.mp4
ls
z temp
ls
cd /tmp
ls
cp ~/Downloads/1.mp4 ./1.mp4
ls
cd ..
cd ls
ls
cd code
ls
cd 
cd code
ls
cd rust
ls
cd cmd
cargo run
cargo run 
go run main.go 
cargo run 
swaylock 
ps | where mem > 100Mib 
cargo run 
ps | where mem > 100Mib 
ps | where mem > 100Mib  | get name mem 
ps | where mem > 100Mib  | get name,mem 
ps | where mem > 100Mib  | select  name mem 
ps | where mem > 10Mib | where mem < 100Mib  | select  name mem 
ls
cd ..
cd 
cd data
ls -l 
cd ..
ls
cd Public/
ls
ls -l 
group list
group 
cgroup list
bash
poweroff 
yay istio
minikube start<\n>
yay --noconfirm -S minikube
sudo bg 1panel
ls
cd ..
ls
cd ..
ls
cd go
ls
mkdir grpc
ls
cd grpc
ls
dc ..
cd ..
rmdir grpc
cp -r template/ grpc
ls
cd grpc
ls
code .
z grpc
ls
cd grpc-go/
code .
git clone --depth=1 https://github.com/zlingqu/go-grpc-demo.git
2.7 * 14
2.7 * 12
47 / 12
47 / 14
2 * 1.3
cd go-grpc-demo
ls
code .
go run client/main.go
go get -u github.com/golang/protobuf/protoc-gen-go<\n>
protobuf
protoc --go_out=.  demo.proto <\n>
yay protoc
go get -u github.com/golang/protobuf/protoc-gen-go<\n>
go get -u github.com/golang/protobuf/protoc-gen-go<\n>
protoc --go_out=.  demo.proto <\n>
yay --noconfirm protoc
yay --noconfirm -S protobuf
ls
go run main.go 
ls
z go
ls
cd ..
cd code/go
ls
cd grpc
ls
cd ..
mkdir grpc-demo
cd grpc-demo/
ls
mkdir grpc-server
mkdir grpc-client
ls
code .
cd api
protoc .
protoc --go_out=.
protoc --go_out=. example.proto
yay --noconfirm -S protoc-gen-go
protoc --go_out=. example.proto
ls
cd ..
cp -r api/ ./grpc-client/
cp -r api/ ./grpc-server/
go mod tidy 
go mod init client 
go mod tidy 
cd grpc-server/
go mod tidy 
cd grpc-client 
ls
cd ..
cd grpc-client
go mod tidy 
go run main.go 
go mod tidy 
go run main.go 
go mod tidy 
go mod init client 
go mod init server
go mod tidy 
go mod tidy 
cd api
protoc --go_out=. example.proto
protoc --go_out=. --go-grpc_out=. demo.proto <\n>
ls
protoc --go_out=. --go-grpc_out=. example.proto <\n>
yay  --noconfirm protco-gen-go-grpc 
yay protco-gen-go-grpc 
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
cd 
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
cd ..
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
go get google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
protoc --go_out=. --go-grpc_out=. example.proto <\n>
protoc --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto <\n>
go get -u github.com/golang/protobuf/protoc-gen-go<\n>
go run main.go 
cd server
go mod tidy 
cd client
go run main.go 
go run main.go 
cd ..
cp -r server ./api-server
cp -r client ./api-client
ls
cp /home/km/code/go/rpc/api-server/api/api.go ./api-client/api/api.go
cd ..
cd api-server/
ls
ls
cd api-client/
ls
go run main.go 
go mod init client 
go mod tidy 
go run main.go 
10 * 30 
10 * 30  
10 * 30  * 40
10 * 30  * 50
10 * 30  * 60
ls
cd api
ls
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
protoc --go_out=. --go-grpc_out=. example.proto <\n>
go mod tidy 
cd ..
cp -r ./api ../grpc-server/
go mod tidy 
ls
cd grpc-server/
cd client
ls
cd client 
cd grpc-client/
ls
go run main.go
go run main.go 
go run main.go
minikube start<\n>
hotpot e go run main.go 
cd aata
cd data
ls
rm *.go
ls
protoc --go_out=. --go-grpc_out=. example.proto <\n>
protoc --go_out=. --go-grpc_out=. demo.proto <\n>
ls
cd api
ls
rm *.go
protoc --go_out=. --go-grpc_out=. demo.proto <\n>
protoc --go_out=. --go-grpc_out=. example.proto <\n>
ls
cd api
ls
rm * 
ls
pp example.proto
pc example.proto
bash 
protoc --go_out=. --go-grpc_out=. example.proto <\n>
cd ..
ls
vim Makefile
make 
proto  --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
proto  --go_out=api --go-grpc_out=api ./api/example.proto 
protoc  --go_out=api --go-grpc_out=api ./api/example.proto 
vim Makefile
make 
ls
ls
cd ..
cp -l /home/km/code/go/grpc-demo/grpc-server/Makefile ./Makefile
cp  /home/km/code/go/grpc-demo/grpc-server/Makefile ./Makefile
make 
ls
./client
ls
cd code/go
ls
cp -r template/ grpc-demo
ls
cd grpc-demo
ls
rm -rf template/
ls
r
git switch master 
git pull 
gitui
ls
go run main.go 
ls
cd ..
ls
cd ..
ls
cp -r template/ tcp
cd tcp
code .
curl localhost:9191/stream 
wget localhost:9191/stream 
ls
vim stream
rm stream
go run main.go 
ls
cd work
git clone --depth=1 https://github.com/songquanpeng/one-api.git
cd one-api/
ls
code .
go run main.go 
ls
cd i18n/
ls
python translate.py
python translate.py --json_file_path=./en.json
python translate.py --json_file_path=en.json
cd ..
cd web/
ls
cd default/
ls
npm install && npm run build 
npm 
npm proxy 
npm help
cd 
npm install 
npm run build 
ls
go run main.go 
vim .npmrc
z work
ls
git clone --depth=1 https://github.com/songquanpeng/go-file.git
ls
cd go-file/
tokie
tokei
code .
go run main.go 
fd mp3
tokei
go  build 
ls
tokei
go mod tidy 
ls
cd ..
ls
cd ..
cd code/go
ls
fd rpc
ls
ls | where name  =~ "rpc"
ls
mv -r grpc-demo/ grpc-example
ls
cp -r grpc-demo/ grpc-example
ls
cd grpc-client/
make 
cd grpc-client/
cd ..
cd ..
cd server
cd client
ls
ls
make 
make 
make proto
make proto
protoc --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
ls
cd ..
ls
cd go
cd grpc-example/
code .
make proto
go run main.go 
z wokr
z work
ls
git clone --depth=1 https://github.com/zlingqu/go-grpc-demo.git
ls
cd go-grpc-demo/
ls
code .
make proto
protoc --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
cd api
ls
cd server
cd client
go run main.go 
go run main.go 
make proto
make proto
go run main.go 
make proto
go run main.go 
make proto
go run main.go 
go mod tidy 
go mod tiyd 
go mod tidy
ls
go run main.go 
go run main.go
make proto
go mod tidy 
protoc --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway<\n>
go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway<\n>
make proto
protoc --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
go mod tiyd 
ls
go mod tidy 
go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway<\n>
ls
protoc --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
sudo lsof -i:50051
go run  main.go 
protoc --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
protoc  --proto_path=.:$GOPATH/src --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
cd $GOPATH/src/google/api/annotations.proto
cd 
cd go
cd src
ls
cd bin
ls
cd ..
cd pkg
ls
env.GOPATH
bash
ls
cd ..
ls
cd ..
l
ls
protoc  -I --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
protoc   --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
protoc --help
cd go
ls
cd okg
cd pkg
ls
cd mod
ls
go env
go env | grep GOPATH
fd go/src
cd 
fd go/src
cd ..
cd /
cd go/src
fd go/src
which go
cd opt
ls
cd ..
ls
cd lib
ls
cd go/
ls
cd src
ls
fd proto
cd ..
ls
fd proto
exit
ls
cd Downloads/
ls
cd google/
ls
cd api
ls
fd *.proto
fd proto
ls
cd 
cd code/go
ls
cd grpc-example/ls
ls
cd grpc-demo/
ls
pc
fd proto -x mv {} /home/km/code/go/grpc-demo/{.}
fd proto -x mv {} /home/km/code/go/grpc-demo/{}
fd proto -x echo {}
fd proto -x echo {.} 
ls
ls
cd server
ls
make proto
pkill keys 
cd /usr/bin/
ls
cd ..
ls
cd ..
cd /etc
ls
cd go
ls
cd ..
cd /opt
cd go
ls
cd ..
ls
cd lib
cd go
ls
cd src
ls
cd ..
ls
cat VERSION
cd code/go
ls
cd test
ls
cd test
mkdir test
cd test
code .
touch main.go
go run main.go 
go mod tidy 
go build 
ls
sudo mv hotpot /usr/bin/hotpot-dev
ls
hotpot init
cd /tmp
ls
hotpot h
hotpot w
gitui
ls
go build 
sudo mv hotpot /usr/bin/hotpot-dev
hotpot-dev h
hotpot w 
echo 23 >>hotpot.sock
echo 23  | hotpot.sock
go build 
sudo mv hotpot /usr/bin/hotpot-dev
hotpot h
hotpot w
go build 
sudo mv hotpot /usr/bin/hotpot-dev
hotpot-dev h
hotpot-dev w
go build 
sudo mv hotpot /usr/bin/hotpot-dev
hotpot-dev h
go build 
go build ; sudo mv hotpot /usr/bin/hotpot-dev
hotpot-dev w
hotpot-dev h
git push 
gitui
sudo rm /usr/bin/hotpot-dev
ls
go build 
mv -r grpc-demo/ grpc-example
sudo mv hotpot /usr/bin/hotpot
hotpot-dev w
bash
ls
exit
z test
ls
exit
ls
vim main.go
go build ; sudo mv hotpot /usr/bin/hotpot
hotpot w
hotpot h
go build ; sudo mv hotpot /usr/bin/hotpot
git add * 
git commit --amend 
ls
hotpot w
hotpot h
git push -f 
poweroff
ls
yay -R go
env 
env | grep go
env | grep GO
env | grep go
bash
go
cd /usr/local
ls
cd go
cd src
ls
cd ..
cd bin
ls
cd ..
ls
cd ..
ls
cd download/
cd Downloads/
cd 
cd Downloads/
ls
tar -C /usr/local -xzf go1.22.5.linux-amd64.tar.gz<\n>
ls
mv -r go /home/km
ls
cd go
ls
cd ..
cd go
ls
cd bin
ls
cd ..
bash
ls
mv --help
mv -f go /home/km
og
go
go version
exit
path 
env | grep go
sudo vim /etc/environment
cd ..
vim .bashrc
ls
vim .profile
ls
go version
cd ..
ls
cd 
ls
cd go
ls
go env
go env 
go  config
go  help
go list
ls
cd ..
ls
cd go
ls
cd ..
rm -rf go
ls
sudo rm -rf go
ls
rm -rf data
sudo rm -rf data
ls
env 
env | grep go
cd Downloads/
ls
sudo mv go /usr/local
ls
go 
go exit
exit
go
sudo vim /etc/environment
ls
exit
go 
go
sudo vim /etc/environment
reboot 
ls
go
env | grep go
sudo vim /etc/environment
cd /usr/local
ls
cd bin
ls
cd ..
ls
cd go
ls
cd bin
ls
./go
./go env 
env 
env | grep go
cd 
cd .local
ls
cd ..
vim .profile
vim .bashrc
vim .fishrc
ls -a | where name =~ "rc"
vim .zshrc
export hello=12
vim /etc/profile
vim /etc/bash.bashrc
ls
go 
reboot 
go
go env
go env 
which go
ls 
ls --help
ls -f
ls
go mod tidy 
go mod init bin
go mod tidy 
hotpot w
ls
gofmt -w /tmp/main.go
impl
golsp
gopls 
gopls /tmp/main.go
gofmt  --help
gofmt -s -w /tmp/main.go
go run main.go 
ls
cd .config
ls
cd vim
ls
cd nvim
ls
vim init.lua
ls
vim
go mod tidy 
cd server
go mod tidy 
ls
make proto
cd api
protoc --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
cd ..
protoc --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
ls
cd 
cd .go
cd go
ls
go env 
cd go
ls
cd pkg
ls
cd ..
ls
cd ..
cd download/
cd Downloads/
ls
cd google/
ls
cd protobuf/
ls
cd ..
rm -rf google
ls
start .
ls
pc
protoc --go_out=./api/. --go-grpc_out=./api/. --proto_path=/home/km/Downloads  ./api/example.proto 
protoc --go_out=./api/. --go-grpc_out=./api/. --proto_path=/home/km/Downloads/google  ./api/example.proto 
cd google/
ls
cd 
cd go
mkdir src
cd ..
mv google/ /home/km/src
protoc --go_out=./api/. --go-grpc_out=./api/.   ./api/example.proto 
protoc --go_out=./api/. --go-grpc_out=./api/. --proto-path=/home/km/go/src  ./api/example.proto 
ls
cd src
ls
ls
cd gools
cd google
ls
cd ..
ls
cd ..
ls
mv src go/
ls
cd go
ls
protoc --go_out=./api/. --go-grpc_out=./api/.   ./api/example.proto 
cd src
ls
mkdir google
start .
mkdir google
protoc --go_out=./api/. --go-grpc_out=./api/.   ./api/example.proto 
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
go get google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
ls
z grpc
ls
rm | where type = file
ls | where type = file
ls | get type = file
ls | get type 
ls | select name type 
ls | select name type  | where type = file
ls | select name type  | where type == file
ls | select name type  | where type == file | echo $in
ls | select name type  | where type == file | get name echo $in
ls | select name type  | where type == file | get name | echo $in
ls | select name type  | where type == file | get name | rm $in
ls | select name type  | where type == file | get name 
ls | select name type  | where type == file | get name  || flatten
ls | select name type  | where type == file | get name  | flatten
ls | select name type  | where type == file | get name  | flatten | rm $in
ls | select name type  | where type == file | get name  |  each { |it| $"Hello, ($it)!" }<\n>
ls | select name type  | where type == file | get name  |  each <\n>
ls | select name type  | where type == file | get name  |  each  {echo $}
ls | select name type  | where type == file | get name  |  each  {echo $it}
ls | select name type  | where type == file | get name  |  each  {|it|  echo $it}
ls | select name type  | where type == file | get name  |  each  {|it|  rm $it}
ls
protoc --go_out=./api/. --go-grpc_out=./api/.   ./api/example.proto 
go get google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
fd proto
cd ..
cd go
fd protoc
ls
cd bin
ls
cd /usr/local
ls
cd bin
ls
cd ..
ls
cd go
ls
cd bin
ls
go install  google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
protoc --go_out=./api/. --go-grpc_out=./api/.   ./api/example.proto 
go run main.go 
go get server/api
go run main.go 
protoc --go_out=./api/. --go-grpc_out=./api/.   ./api/example.proto 
exit
cd 
ls
cd go
cd ..
cd code/go
ls
mkdir grpc-http
cd grpc-http
code .
mkdir client
cd server
ls
cd server
ls
gp mod init server
go mod init server
touch main.go
mkdir grpc-client
cd grpc-client
go mod tidy 
go mod init client
touch main.go 
go mod tidy 
protoc --go_out=./api/. --go-grpc_out=./api/.   ./api/*.proto 
cd ..
protoc --go_out=./api/. --go-grpc_out=./api/.   ./api/*.proto 
go run main.go 
pp
pp 
pc
protoc --go_out=./api/. --go-grpc_out=./api/.  -I=/home/km/code/go/grpc-demo ./api/*.proto 
protoc --go_out=./api/. --go-grpc_out=./api/.  -I=/home/km/go/src ./api/*.proto 
protoc --go_out=./api/. --go-grpc_out=./api/.  -I=/home/km/go/src/ ./api/*.proto 
ls
cd server
ls
pc google
cp -r /home/km/code/go/grpc-demo/server/google/ google
protoc --go_out=./api/. --go-grpc_out=./api/. ./api/*.proto 
cd server
exit
cd ../../
ls
cd grpc-demo
ls
cd server
cd client
ls
make 
make proto
make proto
vim Makefile
make proto
make
make
go run main.go
go run main.go
make proto
go run main.go
make proto
go run main.go
ls
cd ..
ls
cd ..
ls
cd ..
ls
z work
ls
cd go-grpc
cd go-grpc-demo/
code .
sudo bg 1panel
docker ps -a 
docker images
docker run elasticsearch:5.0.0 
docker ps -a 
docker images
docker run elasticsearch 8.14.1
docker run elasticsearch:8.14.1
ls
cd ..
ls
cd ..
cd code/go
ls
mkdir es-demo
ls
rmdir esdemo
rmdir es-demo/
cp -r template es-demo
ls
cd es-demo
ls
code.
code .
go mod tiyd 
go mod tidy 
go run main.go 
docker images
go mod tidy 
docker images
go run main.go 
curl localhost:9200
curl localhost:9300
curl localhost:9008
ls
cd ..
cd 
touch .vimrc
vim .vimrc
cd `Nutstore Files/`
ls
cd Notebook/
ls
cd .obsidian/
ls
vim .vimrc
ls
cd 
cd code/go
mkdir pprof
rmdir pprof
cp -r template pprof
cd pprof
code .
ls
cd ..
rm -rf pprof
gen init pprof
cd pprof
ls
code .
go mod tidy 
go run main.go 
go mod tidy
go mod tiyd 
go mod tidy 
go run main.g o
go run main.go
go mod tidy 
go run main.go 
yay --noconfirm graphviz
	go tool pprof -http=:8080 *.pprof
go run main.go
go tool pprof -http=:8080 cpu.pprof
go run main.go
go run main.go args
go tool pprof -http=:8080 cpu.pprof
go mod tidy 
go tool pprof -http=:8080 cpu.pprof
go run main.go 
	go-callvis main.go
	go install github.com/ofabry/go-callvis@master
go-callvis main.go
go run main.go 
go run main.go cli
go run main.go args hello
go tool pprof -http=:8080 cpu.pprof
go run main.go args hello
go tool pprof -http=:8080 cpu.pprof
go-callvis main.go
go-callvis 
go-callvis  main.go
go-callvis  main
go-callvis  main.go
go-callvis .
go-callvis
go-callvis main
go-callvis main.go
upx 
yay upx 
z work
ls
z github
ls
cd .
cd 
cd github/
ls
git clone --depth=1 https://github.com/Egor3f/go-callvis.git
z dotfile
ls
cd script/
ls
touch repo
vim repo
chmox +x repo
chmod +x repo
sudo cp repo /usr/bin/repo
ls
cd go-callvis/
ls
code .
go build 
ls
which go-callvis
rm /home/km/go/bin/go-callvis
ls
sudo mv go-callvis /usr/bin/go-callvis
go mod tidy 
go-callvis main.go
go-callvis main.go args hello
z hotpot
ls
go-callvis main.go
go run main.go 
gen cli 
z pprof
ls
go run main.go
go run main.go 
go-callvis main.go
go run mai.go
go mod tidy 
go run main.go 
rm *.pprof
go run main.go 
go mod tidy 
ls
go tool pprof -http=:8080 cpu.pprof
go mod tidy 
go run main.go 
exit
exit
go run main.go 
ls
go run main.go 
go tool pprof -http=:8080 cpu.pprof
go run main.go 
go tool pprof -http=:8080 cpu.pprof
ls
cd ..
ls
cd 
cd code/go
ls
cd zero
ls
cd ..
ls
cd grpc
ls
cd ..
rm -rf grpc
ls
rm -rf grpc-http
ls
cd grpc-example
ls
cd ..
ls
cd go
ls
cd clickhouse/
ls
cd ..
z feishu
ls
code .
go mod tiyd 
go mod tidy 
go run main.go
go run main.go 
docker start clickhosue
docker start clickhouse
ls
z github
ls
cd ..
cd github
repo https://github.com/KM911/tiu.git
ls
cd tui
cd tiu
ls
./tiu
rm tiu.exe
ls
cd .github
ls
code .
go build 
./tiu
cd data
ls
r
cd ..
ls
./tiu 
./tiu upload
./tiu server
sudo lsof -i:3000
reboot 
ls
gen
z gen
code .
gen cli
go build ; sudo mv gen /usr/bin/gen
go build -o gen ; sudo mv gen /usr/bin/gen
rm bin
ls
gen 
gen cli
go build -o gen ; sudo mv gen /usr/bin/gen
gen cli
gen 
gen cmd
gen cli
go build -o gen ; sudo mv gen /usr/bin/gen
gen
gen 
go build -o gen ; sudo mv gen /usr/bin/gen
gen
ls
cd test
ls
gen init tsl
ls
cd tsl
ls
r
go build -o gen ; sudo mv gen /usr/bin/gen
cd test
ls
rm -rf tsl
gen init tsl
ls
r
cd tsl
go run main.go 
ls
go run main.go 
vim main.go
exit
go build -o gen ; sudo mv gen /usr/bin/gen
go build 
ls
gitui
git push 
z 
fd KM911
cd code/KM911/KM911
ls
cat profile.md | wl-copy
rm profile.md
git  add * 
git push 
yay 
ls
z cyber
ls
go run main.go 
go mod tidy 
go run main.go 
code .
go build 
make 
ls
ssh root@87.123.12.12 
./client
./client
./server 
go mod tidy 
m go proxy
go run main.go 
ls
z ..
ls
cd ..
fd go-ci
cd ci
fd ci
fd go
fd CI
fd GO-CI
ls
cd ..
ls
cd github/
ls
repo https://github.com/KM911/GO-CI.git
gh repo clone KM911/GO-CI
gh auth login
ls
gh repo clone KM911/GO-CI
ls
cd GO-CI/
ls
code .
git add * 
git push 
go arch
go 
go env
go env | grep ARCH
git tag 
git tag v0.0.1
gitui
git push 
git add *
git commit -m "add linux and windows release version"
git tag v0.0.2
git push 
yay typora 
ssh root@82.157.251.19
exit
exit
go mod tidy 
ls
vim tet.tx
vim tet.txt
ls
go run main.go 
go run main.go
poweroff 
go run main.go 
cd ReverseList/
ls
go run main.go 
ls
16 * 256
256 ** 15
gitui
git pull 
gitui
gen cmd
go run main.go 
go run main.go
echo -v 
go run main.go 
hotpot w
bash -c echo hello go run main.go 
bash -c echo hello | gerp h
bash -c echo hello | grep h
go mod tidy 
pc
python 
ls
cd .ssh
ls
cd ..
go build 
ls
sudo mv hotpot /usr/bin/hotpot-dev
hotpot-dev 
hotpot-dev w
go mod tidy 
go build 
go mod tidy 
go build 
ls
sudo mv hotpot /usr/bin/hotpot-dev
hotpot-dev w
go build ; sudo mv hotpot /usr/bin/hotpot-dev
github-desktop 
gitui
git push 
hotpot-dev w
go mod tidy 
go mod tidy 
go mod tid y
go mod tidy 
yay -Runc github-desktop
gitui
git push 
ls
gitui
go build ; sudo mv hotpot /usr/bin/hotpot-dev
hotpot-dev w
hotpot-dev 
hotpot-dev w
yay --noconfirm github 
z fish
gh 
gh repo 
gh repo view
gh repo 
yay --noconfirm github  desktop
ls
ls
z go
ls
mkdir slice
rmdir slice
gen init slice
cd slice
ls
code .
go run main.go
hotpot w
exit
git pull 
gitui
hotpot e go run main.go 
go run main.go
go run main.go 
ls
cd ..
gen init kata
ls
cd kata
ls
code .
vim main.go
ls
z 
cd `Nutstore Files/`
ls
cd Notebook/
ls
tree
z github
ls
cd ..
cd 
cd github
repo https://github.com/huihongxiao/MIT6.S081.git
repo git clone git://github.com/mit-pdos/xv6-public.git
repo  git://github.com/mit-pdos/xv6-public.git
ls
gh repo clone huihongxiao/MIT6.S081
ls
exit
gen cli obsidian-execute-code-enhancement-go
gen 
gen cli ttc
go build ; sudo mv gen /usr/bin/gen
gen cli ttc
rm /usr/bin/gen
sudo rm /usr/bin/gen
go build 
go build ; sudo mv gen /usr/bin/gen
gen 
gen cli hello
cd hello
fd 
ls
ls -l
cd ..
go build ; sudo mv gen /usr/bin/gen
gen cli hello
ls
cd hello
ls
go run main.go 
gen cmd 
cd ..
rm -rf hello
go build ; sudo mv gen /usr/bin/gen
gen cli hello
cd hello
ls
go run main.go 
cd ..
ls
rm -rf  hello
ls
ls
gen cli execute-code
n
exit
nu
nu --help
nu --logo
logo
nu --help
yay 
ls
z go
mkdir cross-platform 
ls
rmdir cross-platform/
gen init crossplatform 
cd crossplatform/
code .
go run main.go 
go run . 
reboot 
poweroff 
ls
go build 
gitui
go build 
./hotpot 
sudo mv hotpot /usr/bin/hotpot-dev
hotpot-dev e go run main.go
go run main.go
hotpot-dev e go run main.go
hotpot e go run main.go 
go build ; sudo mv hotpot /usr/bin/hotpot-dev
hotpot e go run main.go 
hotpot-dev e go run main.go
go mod tidy 
go build 
sudo mv hotpot /usr/bin/hotpot-dev
go build ; sudo mv hotpot /usr/bin/hotpot-dev
hotpot-dev e go run main.go
go mod tidy 
z fish
code .
gitui
go mod tidy 
go mod tidy 
git add * 
rm log
ls
gitui
git commit --amend 
git push 
z go-files
cd ..
cd 
ls
cd github
ls
cd../code/
cd 
z github
ls
cd ..
cd code
ls
cd github
ls
cd ..
fd go-files
fd files
cd go
ls
cd ..
ls
cd work
ls
cd go-file/
ls
go build 
ls
ip -a
ip a
ls
vim go.mod
ls
nutstore 
cri
ps | where crp
poweroff 
ls
git add  * 
pkill 
reboot 
ls
z kata
ls
code .
go run main.go 
args 
args
hotpot w
hotpot e go run main.go 
hotpot e go run .
go run main.go
vim main.go
go run main.go 
minikube
minikube start 
minikube list
minikube --help
kubectl list
kubectl 
yay kubectl
minikube dashboard
kubectl
kubectl list
kubectl get
kubectl node
ls
python back.py
rem
z github
cd
cd github
repo gh repo clone huihongxiao/MIT6.S081
z github
ls
cd
cd github
ls
gh repo clone huihongxiao/MIT6.S081
repo huihongxiao/MIT6.824
repo github.com/huihongxiao/MIT6.824
repo https://github.com/huihongxiao/MIT6.824.git
ls
repo https://github.com/huihongxiao/MIT6.S081.git
ls
cd 
cd `Nutstore Files/`
ls
cd Notebook/
ls
cd CARD/
ls
cd MIT/
ls
cd MIT6.S081/
ls
rmdir  .gitbook/
start .
ls
code .
go run main.go
z test
ls
go mod tidy 
go run main.go
vim test.file
go  run main.go 
go run main.go
sudo   cat /proc/vmallocinfo
sudo grep vmalloc /proc/vmallocinfo  |awk '{total+=$2};END {print total}'
sudo  cat /proc/meminfo | grep Table<\n>
82868 / 1024
sudo cat /proc/meminfo
exit
go run main.go 
go run maing.o 
go run main.go
sudo lsof -i:9000
go run main.go 
go tool pprof -inuse_space http://127.0.0.1:8080/debug/pprof/heap
go-torch -alloc_space http://127.0.0.1:8080/debug/pprof/heap --colors=mem<\n>
yay go-torch
go install go-torch
go-torch -alloc_space http://127.0.0.1:8080/debug/pprof/heap --colors=mem<\n>
go tool pprof -inuse_space http://127.0.0.1:8080/debug/pprof/heap
go tool pprof -http=:7778 http://localhost:7777/debug/pprof/heap<\n>
go run main.go
pwd 
z feishu
ls
code .
go mod tidy 
go tool pprof -http=:7778 http://localhost:8080/debug/pprof/heap<\n>
yay --noconfirm kafka
yay --noconfirm -S nsqlookupd
yay --noconfirm  nsql
kafka-jmx.sh 
yay --noconfirm  nsq
$ nsqd --lookupd-tcp-address=127.0.0.1:4160<\n>
ls
z code
ls
cd go
mkdir nsq
ls
cd nsq
ls
gen init provider
ls
gen init consumer
code .
go mod tidy 
cd provider/
go mod tidy 
ls
cd consumer/
ls
go mod tidy 
ls
cd ..
ls
cd provider/
ls
go run main.go 
go run main.go
go run main.go 
ls
go run main.go
nsqd --lookupd-tcp-address=127.0.0.1:4160<\n>
nsqlookupd
z nsq
ls
cd provider/
ls
cd ..
ls
cd consumer/
go run main.go
go run main.go 
docker start redis
redis-client
redis-cilent
redis-cli 
yay email
z test
ls
rm *
ls
touch main.go
code .
hotpot e go run . 
go run main.go
go mod init bin
go mod tidy 
yay wemeet
ls
n
ls
z pprof
ls
cd .
cd ..
ls
rm -rf pprof/
ls
z go
ls
z pprof
ls
go run main.go 
vim main.go
ls
vim main.go
go run main.go 
ls
vim main.go
z hotpot 
vim main.go
go run main.go 
git pull 
go run main.go w
poweroff 
ls
z kat
ks
go run main.go 
go run  main.go 
go rum main.go
go run main.go
ls
pwd
exit
reboot 
systemctl reboot --firmware-setup<\n>
update-grub
sudo update-grub
reboot 
z kata
ls
go run main.go 
vim main.go
z nvim
ls
code .
ls
vim main.go
ls
z notebook
ls
fd conf
exit
l
ls
cd ..
ls
cd ..
ls
cd Library/
ls
cd ..
ls
cd Applications/
ls
cd ..
ls
cd pprof/
ls
cd ..
rm -rf pprof
ls
cd work
ls
cd ..
cd work
ls
cd export
ls
cd ..
rmdir export 
ls
z note
ls
cd ..
ls
cd ..
cd code
ls
z fiber
ls
cd ..
ls
cd gin
ls
code .
rm *.py
ls
cd main.go
ls
rm main.png
ls
go run main.goi 
go build 
ls
gin
ls
cd ..
cd
ls
cd Documents/ls
cd Documents
ls
cd note
ls
cd ..
pkill obsidian 
pkill elecron
reboot 
ls
z gin
cd Documents
ls
cd note
ls
ls
go run build 
go build 
pc 
cd ..
pc 
mv gin /home/km/Documents/
ls
yay 
ls
z
cd .config
ls
vim code-flags.conf
ls
mv code-flags.conf code-flags.conf-disable
go run main.go 
./gin 
ls
cd note
ls
cd ..
ps 
ps
ps 
ps | where cpu > 1
ps | where name =~ "obsidian"
ps | where name =~ "ele"
pip install obsidianhtml
ls
mkdir export 
ls
cd export 
ls
touch config.yaml
vim config.yaml
obsidianhtml convert -i config.yaml<\n>
pip install obsidianhtml
/home/km/Templates/python/venv/bin
/home/km/Templates/python/venv/bin/obsidianhtml  convert -i config.yaml<\n>
/home/km/Templates/python/venv/bin/obsidianhtml  convert -i ./config.yaml<\n>
pp
ls
z export
/home/km/Templates/python/venv/bin/obsidianhtml  convert -i ./config.yaml<\n>
z export 
ls
vim config.yaml
ls
vim config.yaml
ls
ls
/home/km/Templates/python/venv/bin/obsidianhtml  convert -i ./config.yaml<\n>
cd out
ls
cd output/
ls
obsidianhtml serve --directory output/html --port 8000<\n>
ls
z python
ls
cd venv
ls
cd bin
ls
pc
sudo vim /etc/environment
/home/km/Templates/python/venv/bin/obsidianhtml serve --directory output/html --port 8000
ls
z notebook
ls
code .
ls
ls
cd .obsidian
ls
cd snippets/
ls
code .
ls
cd .config
cd 
cd .config
cd fcitx5/
ls
vim conf
ls
vim config
ls
3150 / 180
3960 / 180
3960 / 180 1+6 dan I need to make bigger money , how , enter the bigger company , every thing will be fine 
go run dp.go 
go run dp.go
ls
z test
lv
vim 
vim test
vimn test.go
ls
vim test.go
ls
rm test.go
vim main.go
ls
vim test.go
ls
rm test
ls
cd ..
z github
ls
cd 
ls
cd github
ls
yay hugo
git clone https://github.com/CaiJimmy/hugo-theme-stack-starter.git
ls
rm *.dat
ls
vim hugo-theme-stack-starter/
ls
cd hugo-theme-stack-starter/
ls
hugo server
ls
cd content
ls
cd ..
code .
hugo server 
go run main.go 
hugo new 
hugo new content tts
hugo new content post
hugo 
hugo --help
manjaro-downgrade obsidian 
yay manjaro-downgrade
yay --noconfirm  -S manjaro-downgrade
manjaro-downgrade obsidian 
ls electron 
which electron
electron 
sudo manjaro-downgrade obsidian
ls
cd ..
ls
code .
cd .obsidian 
cd 
cd .config
cd obsidian/
ls
cp user-flags.conf ../user-flags.conf
yay 
cd. .
cd ..
rm -rf obsidian/
ps
ps | where name =~ "obsidian "
ps | where name =~ "obsidian"
yay --noconfirm  
yay -Runc siyuan-note-bin
yay --noconfirm  
yay -Runc elasticsearch-bin
yay elastic 
22 * 180
12000 
4000 + 3000 
yay --noconfirm  
pip install pillow 
python test.py
170 -26 - 24
minikube 
minikube dashboard 
minikube start 
kubectl nodes
kubectl po
kubectl pods
kubectl 
kubeadmi
kubectl 
kubectl  list
kubectl get deployments<\n>
kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.39 -- /agnhost netexec --http-port=8080<\n>
kubectl get deployments<\n>
docker ps -a 
docker images
kubectl get pods
kubectl get events<\n>
ls
poweroff 
yay --noconfirm  
uname 
cd /run
ls
yay obsidian 
sudo mhwd-kernel -li
sudo mhwd-kernel -r linux66
reboot 
ls
exit
sudo vim /etc/environment 
ls
pamac list --orphans openjdk
pamac list --orphans obsidian
pamac list --orphans 
pacman -Qi qt<\n>
pacman -Qi obsidian 
pacman -Qi kafka
pacman -Qi openjdk
pacman -Q openjdk
pacman -Q java
pacman -Q java=17
pacman -Qi jdk-openjdk
pacman -Qi apifox-bin
pacman -Qi clickhouse
pacman -Qi feishu
yay --noconfirm  
reboot 
ls
yay --noconfirm  
reboot 
feishu
ls
ls web 
ls 
sudo bg 1panel
minikube start 
kubectl show pods 
kubectl get pods
kubectl get nodes
kubectl get pods 
kubectl get pods
kubectl get services
helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/<\n>
yay helm
helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/<\n>
helm upgrade --install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard --create-namespace --namespace kubernetes-dashboard<\n>
helm upgrade --install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard 
exit
kubectl get services
kubectl get pods
kubectl get pods 
minikube dashboard 
kubectl get services 
z .config
ls
vim user-flags.conf
ls
cp user-flags.conf ./obsidian/
ls
exit
ssh root@82.157.251.19
yay k8s
kubectl create deploy nginx-deploy --image=nginx:1.7.9
kubectl get deploys
kubectl get deployments
kubectl get deploy
kubectl get pods
kubectl get replicate
kubectl get replicatset
kubectl get replicaset
kubectl get pod
kubectl get deploy nginx-deploy -o yaml
ls
kubectl get deploy nginx-deploy --show-labes
kubectl get deploy nginx-deploy --show-lables
kubectl get deploy nginx-deploy --show-labels
kubectl edit nginx-deploy
kubectl edit deploy nginx-deploy
kubectl get pod 
kubectl get deploy
kubectl get
kubectl get -h
kubectl get rs
yay etcd
yay --noconfirm   -S etcd
etcd --help
yay etcd client 
etcdctl 
etcdctl  client
etcdctl  server
etcdctl  
etcdctl  get hello
etcdctl  put 1
etcdctl  put key value 
etcdctl get key
etcdctl get hello
etcdctl get key 
z go
ls
cd ..
ls
cd code
cd go
ls
gen init etcd
cd etcd
ls
code .
go run main.go 
go mod tiyd 
go mod tidy 
go run main.go 
go run main.go
go mod tidy 
go run main.go 
etcdctl put key new_value
go mod tidy 
etcdctl put key new_value
go run main.go 
lsof etcd
sudo lsof etcd
sudo lsof --help
netstat
ps -aux | grep aaa
ls
cd ..
gen init mongodb 
ls
cd ../mongodb/
code .
go mod tidy 
bash
yay --noconfirm   mongodb
docker exec -it minikube
docker exec -it  minikube /bin/bash
docker stop minikuber
docker stop minikube
kubectl proxy<\n>
etcd
ps 
ps | where mem > 100Mib  | select  name mem 
mongodb/
mongodb
mongod 
go run main.go 
mongod  
mongos 
mongosh 
mongoc-stat 
mongod 
mongod --help
mongos --help
mongod 
ls
mongod 
mongoc
mangod
journalctl  -xeu
systemctl cat mongodb | grep ExecStart<\n>
systemctl status mongodb
systemctl start  mongodb
mongod
cd /etc
systemctl status mongodb
ls
cd /var
cd lib
ls
cd mongodb/
cd ..
cd 
cd Public/
ls
mkdir mongodb
ls
cd mongodb/
pc
vim mongodb.conf
sudo vim mongodb.conf
mangod
mongod
reboot 
ls
once /usr/bin/code
once code
mangod
mongod
sudo systemctl restart mongodb
sudo systemctl status mongodb
ls
cd Public/
ls
ls -l
cd mongodb/
ls
touch mongod.log
sudo systemctl status mongodb
sudo systemctl start  mongodb
ls
ls -l
sudo chmod 777 mongod.log
sudo systemctl status mongodb
sudo systemctl start  mongodb
sudo systemctl status  mongodb
vim /home/km/Public/mongodb/mongod.log
sudo systemctl start  mongodb
sudo systemctl status  mongodb
sudo bg 1panel
a
docker start clickhouse
docker stop clickhouse 
the fast way to deploy your server 
but I really do not like it 
just do what it want 
ls
go run main.go 
mongoc-stat 
mongosh 
mongosh -u mongo -p 
mongosh 
mongosh  --help
mongosh --username root --password cmstop
mongosh --username mongo --password cmstop
mongosh --username mongodb --password cmstop
mongosh --username mangodb --password cmstop
exit
go run main.go 
180 * 18
180 * 22
ls
poweroff 
ps 
docker images
docker ps -a
go run main.go
go run main.go 
go run main.go
go run main.go 
ls
vim /home/km/Public/mongodb/mongod.log
z kata
ls
z work
ls
git clone https://github.com/WiseEcho/epilogue.git
z goquery
ls
cd ..
mkdir goquery 
ls
cd goquery 
ls
cd ..
rmdir goquery
gen init goquery 
cd goquery/
ls
vim main.go 
code .
z tem
ls
cd chromedp/
ls
cd ..
rmdir chromedp/
ls
cd cli
ls
r
start .
cd python
cd ../python/
ls
cd venv/
ls
cd bin
ls
pc 
cd 
ls
mkdir venv 
ls
cd venv
python -m venv python 
ls
cd python
ls
cd ..
ls
cd python
cd bin
ls
pp
pc 
z 
cd Templates/
ls
cd python/
ls
code .
ls
cd lib
ls
cd tools
ls
python header_parser.py
z work
ls
git clone --depth=1 https://github.com/WiseEcho/epilogue.git
ls
cd epilogue/
ls
code .
ls
touch main.ipynb
z vevn
z venv
ls
cd
ls
cd venv
ls
cd python/
cd bin
pc
rm main.go
touch main.go
rm main.go
touch main.go
go mod tidy 
go run main.go 
gp run main.go 
go run main.go 
hotpot e go run main.go 
go run main.go 
ls
z 
cd work
ls
mkdir log
ls
cd log
ls
curl https://cidian.qianp.com/ci/%E8%AE%A1%E7%AE%97%E6%9C%BA
wget https://cidian.qianp.com/ci/%E8%AE%A1%E7%AE%97%E6%9C%BA
ls
vim 计算机
go run main.go
go get github.com/PuerkitoBio/goquery
hotpot e go run main.go
python main.py
go get github.com/PuerkitoBio/goquery
python main.py
hotpot e go run main.go
go run main.go 
go mod tidy 
go run main.go 
go run main.go
git pull 
gitui
git checkout -b develop
git push 
gitui
git push 
go build 
go build main.go 
ls
ssh root@82.157.251.19
z test
ls
ssh root@82.157.251.19
scp main 82.157.251.19:/root/query
scp ./main 82.157.251.19:/root/query
scp ./main root@82.157.251.19:/root/query
ls
m go static 
rm dp.go
ls
m go static 
lsd
ls
scp ./main root@82.157.251.19:/root/query
ls
rm main
ls
mv test main
ls
scp ./main root@82.157.251.19:/root/query
go build 
ls
docker start mysql redis 
./epilogue epilogue
cd cmd
ls
cp root.go root_copy.go
git pull 
gitui
git switch develop
ls
gitui
git stash pop 
ls
go build 
./epilogue epilogue
docker es 
docker images 
go build 
docker run  -p 9200:9200 -p 9300:9300 elasticsearch:5.0.0 
go run main.go 
go build 
./epilogue epilogue
go build 
./epilogue epilogue
go build 
./epilogue epilogue
210 * 22 
180 * 22 
210 * 22 
ls
make doc 
make doc
vim Makefile
make docs
vim Makefile
make docs
swag
go instal swag
go get sway 
go install github.com/go-swagger/go-swagger/cmd/swagger@latest
go build 
./epilogue epilogue
make docs
sway 
swag
go install github.com/swaggo/swag/cmd/swag@latest
make docs
swag 
go install github.com/swaggo/swag/cmd/swag@latest
make docs
swag 
swag init 
cd go
cd 
cd go
ls
cd bin
ls
pc
ls
sudo vim /etc/environment 
reboot 
ls
pwd 
ls
hello
hello 
lazyvim 
lazy
vim
v
alias v vim 
alias v 
alias 
alias v=vim
alias v = vim
v
exit
v
z nushell
ls
vim env.nu
z github
ls
ps 
ps | where name =~ "clash"
ps | where name =~ "mihomo"
git clone --depth=1 https://github.com/Kuingsmile/clash-core.git
cd clash-core/
ls
cdoe .
ls
code .
z kata
ls
go run main.go
ls
z go
ls
gen init load-balance
ls
cd load-balance/
ls
code .
go run main.go
yay clash 
which clash
which clash-meta
which clash-mate
which clash-mata
which mihomo
ps | where name =~ "mihomo"
vim /usr/bin/verge-mihomo
file /usr/bin/verge-mihomo
file /usr/bin/verge-mihomo-alpha
ldd /usr/bin/verge-mihomo-alpha
ldd /usr/bin/verge-mihomo
yay clash verge
mihomo
vim /usr/bin/verge-mihomo
file /usr/bin/verge-mihomo-alpha
file /usr/bin/verge-mihomo
bash
ssh root@82.157.251.19
z git 
ls
git clone -b  docker-compose --depth 1 https://github.com/cedar2025/Xboard<\n>
cd Xboard/
ls
yay xray-core
yay xray core 
ls
xray 
xray --help
xray version 
size clash
size /usr/bin/clash
size /usr/bin/clash-verge
ls -l /usr/bin/clash
ls -l /usr/bin/xray
z github
ls
repo https://github.com/XTLS/Xray-core.git
ls
cd Xray-core/
code .
xray run 
ls
xray --help
xray help run 
ssh root@82.157.251.19
poweroff
vim test.json
rm test.json
ls
./main 计算机
./main 计算机 | save -f index.json
go run main.go 
go run main.go
./main 计 | save -f char.json
mv index.json word.json
go run main.go
mv index.html char.html
wget https://www.zdic.net/hans/%E8%AE%A1%E7%AE%97%E6%9C%BA -o index.html
mv 计算机 index.html
go run main.go 
go run main.go | save -f test.json 
go run main.go 
hotpot e go run main.go
go run main.go
go run main.go 
hotpot e go run main.go
hotpot w 
hotpot w
go run main.go
touch main.go
go run main.go 
go mod tidy 
go run main.go 
hotpot w
hotpot w
mv index.html word.html
mv char.html index.html
go run main.go 
ssh root@82.157.251.19
exit
rm test.json
ls
z dict
ls
go build 
./epilogue epilogue
docker start mysql redis 
go build 
curl http://localhost:3000/v1/dictQuery?word=%E4%B9%A0%E8%BF%91%E5%B9%B3
./epilogue epilogue
go build 
z work
ls
cd epilogue/
ls
go build 
ls
./epilogue epilogue
go build 
./epilogue epilogue
ls
go build 
./epilogue epilogue
hotpot w 
vim hotpot.toml
ls
go run main.go 
ls
go run main.go 
hotpot w
go run main.go 
hotpot w
go build 
./epilogue epilogue
go build 
ls
go run main.go 
./epilogue epilogue\
./epilogue epilogue
hotpot w
go build 
./epilogue epilogue
hotpot w
go build ; ./epilogue epilogue
go build 
./epilogue epilogue
go build ; ./epilogue epilogue
git rebase master 
gitui
git switch master 
git pull
gitui
ls
git switch develop
ls
git rebase master 
gitui
git add * 
git stash 
git rebase master 
ls
rm epilogue
ls
go build 
./epilogue epilogue
ls
cd ..
cd ver
cd vercanium/
ls
cd common/
ls
pc dict
cd dict
pc
sudo vim /etc/bin/pc
which pc
file /usr/bin/pc
z tools
ls
code .
ls
make 
python make.py
ls
python make.py
ls
sudo mv pc /usr/bin/pc
pc sql.go
ls
exit
ls
cd common/
ls
cd dict
ls
rm dict.go
pc
cd common/
cp -r dict /home/km/work/vercanium/common
go mod tidy 
ls
make docs
ls
cd 
cd .config
ls
vim user-flags.conf
cp user-flags.conf ./Code/
ls
cd Code/
ls
vim user-flags.conf
cd ..
ls
vim code-flags.conf-disable
cp code-flags.conf-disable code-flags.conf
go build 
make docs
make
make docs
ls
go build 
./epilogue epilogue
go build ; ./epilogue epilogue
go mod tidy 
go build ; ./epilogue epilogue
gitui
git switch master 
git pull 
git switch develop
git add * 
git stash 
git rebase master 
gitui
ls
gitui
git push 
git push 00set-upstream origin develop
gitui
git push set-upstream origin develop
git push 
git push --set-upstream origin develop
git push 
ls
z go
ls
cd 
cd go
cd ../code/go
gen init escape
cd escape/
code .
go run main.go
go run main.go 
hotpot e go run main.go 
hotpot w 
m go bin
hotpot d
hotpot w
go build ; ./epilogue epilogue
git stash pop 
go build ; ./epilogue epilogue
ls
ls
cd ..
ls
cd ..
z test
ls
./main 好 | save -f good.json
curl http://localhost:3000/v1/word/query/?word=好 | save -f ggood.json
curl http://localhost:3000/v1/word/query?word=好 | save -f ggood.json
curl http://localhost:3000/v1/word/query?word=%E5%A5%BD
curl http://localhost:3000/v1/word/query?word=%E5%A5%BD | save ggood.json
curl http://localhost:3000/v1/word/query?word=%E5%A5%BD | save -f ggood.json
ls
docker ps -a 
sudo bg 1panel
ls
reboot 
docker ps -a 
yay ansibe
yay ansible
ansible 
ansible --help
ansible  --list-hosts
cd /etc
ls
z go
ls
z /etc
ls
mkdir ansible
ls
z
cd go
ls
cd ..
cd code
ls
mkdir script 
ls
cd script/
ls
vim host
ls
ansible 
ansible --list-host
ansible all -m ping
ansible web -m ping
ansible -i host all -m ping
vim host
ansible -i host all -m ping
pip install pillow
bash 
ansible -i host all -m ping
which python 
poweroff
ls
ssh 
ssh roo
go run main.go 
go build 
./epilogue epilogue
docker start mysql redis 
go build 
hotpot w 
vim hotpot.toml
./epilogue epilogue
go build 
./epilogue epilogue
hotpot w
go build ; ./epilogue epilogue
ls
rm epilogue
z ep
ls
go build ; ./epilogue epilogue
rm rm epilogue
rm ep
rm epilogue
ls
go build 
ls
./epilogue epilogue
go build ; ./epilogue epilogue
git  commit --amend 
git pull 
git rebase master 
git add * 
git stash 
git rebase master 
git rebase orgin:master 
git fetch origin:master 
git rebase origin:master 
git rebase origin/master 
git branch 
git branch  -a 
git rebase remotes/origin/develop 
git switch master 
git pull 
gitui
ls
git switch develop
ls
git rebase master 
gitui
git push 
github-desktop 
yay github-desktop
gitui
git pull 
z cute
ls
z dress
ls
code .
ls
yay miku theme 
z config
ls
cave
ceva
cava 
ls
sys disk 
sys get disk 
sys 
sys disks
dust 
du
cd 
cd /
du
dust
sys disks
sudo bg 1panel
ls
go run main.go 
ssh root@82.157.251.19
z github 
repo https://github.com/cuixueshe/earthworm.git
z kata
ls
z kata
ls
cd ..
ls
cd kata
ls
cd ..
ls
gen init interview
ls
intervimew
cd interview
ls
code .
z 
cd .config
ls
cd Code/
ls
vim user-flags.conf
ls
cd ..
ls
fd code-flags.conf
mv code-flags.conf ./Code/
ls
160 * 20
160 * 22
5000 / 22 
right 
right
ls
cd yazi
ls
r
ls
z 
ls
cd .dotfile
ls
z github
ls
cd ..
z dotfile
ls
