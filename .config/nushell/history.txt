m go bench .
wofi -drun 
bashtop
ping localhost
cd. .
z code
scp main 82.157.251.19:/root/query
yay email
go buiid ../
kubectl get deployments
go-torch -alloc_space http://127.0.0.1:8080/debug/pprof/heap --colors=mem<\n>
xray run 
docker start redis-6
rm dp.go
ps | where ppid = 141403
docker
make proto
cd Videos/
go run .
carog run 
ls | where name  =~ "grub"
cd embed 
sudo netstat-nat  -p tcp 
yay -R kvantum
pacman -Qi obsidian 
yay -Runc kvantum
gitp ull 
docker run --name redis-cluster-1 -d myredis:0.0.1
lks
curl localhost:3000/v1/word/query?word=hello
ansible --list-host
sudo rm /usr/bin/pp
pgrep --list -f waybar
ls | get type 
2.7 * 12
who
pgrep  -l -f waybar 
redis-client
gen init escape
rm json.txt
yay wechat 
16 * 8
cava
info 
sudo rm autostart
ps | where name =~ "obsidian "
yay github-desktop
golsp
cp -r ./template ./cli
keys
rm -rf pprof
gp run main.go 
1 * 1024 * 1024 / 1000
z
cd GPUCache/
m go bench 
cd gtk-3.0/
ls -a | where name =~ "rc"
z ..
mkdir hopt
rm bin
docker run --name redis-test1 -v /etc/redis/redis.conf:/etc/redis/redis.conf myredis:0.0.1
touch Makefile
sudo keyd
hugo new content tts
notify-send -i foot hello 
history | last 5 >> log
startship 
cp -r rofi/ ~/.config
brightnessctl set 220
z cyber
./rem docker 
yay --noconfirm   mongodb
echo 23 >> wob
wezterm-mux-server 
z temp
fd proto -x mv {} /home/km/code/go/grpc-demo/{}
journalctl --help
/home/km/Templates/python/venv/bin/obsidianhtml  convert -i config.yaml<\n>
ps -l 
cd ../mongodb/
go install github.com/swaggo/swag/cmd/swag@latest
./gen 
ssh roo
10 * 30  * 60
pgrep "wob"
ps
wofi --show drun  --allow-image
docker run --name redis-test myredis:0.0.1 -v /etc/redis/redis.conf:/etc/redis/redis.conf
cat test.log
ps | where mem > 10Mib
go run maing.o
./tool sudo vim /etc/environment
yes
which waybar
ps | where  name =~ "wezterm"
ls -l
vim go.mod
sudo rm -rf waybar
cat uca.xml
sudo systemctl status mongodb
223 % 16
go-callvis  main.go
man wob
why not 
sudo netstat-nat -s localhost
./main 好 | save -f good.json
swaymsg "move [app_id=\"org.wezfurlong.wezterm\"] to scratchpad"<\n>
git clone --depth=1 https://github.com/zeromicro/zero-examples.git
python translate.py --json_file_path=en.json
yay --noconfirm   -S etcd
curl localhost:3000/v1/word/query?word=计算
rm dict.go
kubectl 
but I really do not like it 
swag 
sudo rm ./target
etcdctl  server
cd transform/
y
cd hugo-theme-stack-starter/
cd /var/log/journal/
sudo evremap list-devices
go run . | rofi -dmenu | wl-copy
touch repo
etcdctl put key new_value
exit\
netstat
ps | where ppid == 141403
pgrep wob
who you are
og
redis-cli -h 172.39.1.5 -p 10001
cp -r nwg-icons ~/.config
yay --noconfirm  -S xclip
sudo tcpdump 
find -type d 
./rpc-capture rpc
gen init slice
yay --noconfirm -S alacritty
rm -rf grpc
cd snippets/
git clnoe --depth=1 https://github.com/uber-go/zap.git
wl-clip-persist 
once 
r
wofi -dmenu
tail -f "$wob_pipe" | wob -c $ini &
ps | where mem > 100Mib | group 2
git stash 
lc
cd gools
cp /home/km/code/go/rpc/api-server/api/api.go ./api-client/api/api.go
pgre waybar
sudo lsof -i:9000
exit
cd es-demo
protoc  --proto_path=.:$GOPATH/src --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
docker run  -p 9200:9200 -p 9300:9300 elasticsearch:5.0.0 
sudo rm /usr/bin/gen
kubectl node
redis-cli --cluster create 172.17.0.2:6379 172.17.0.3:6379 172.13.0.4:6379 172.17.0.5:6379 172.17.0.6:6379 172.17.0.7:6379 --cluster-replicas 1
10 * 30 
docker run  --ip 172.39.1.20 -v /etc/redis/redis.conf:/etc/redis/redis.conf myredis:0.0.1
cd Evremap-GUI/
cp mocha.conf ~/.config/swaylock/config
rm test.json
nutstore 
minikube
sys 
sudo   cat /proc/vmallocinfo
mongoc-stat 
cd github
pip install pillow
docker network
vim /usr/bin/verge-mihomo
./tiu server
make test
yay --noconfirm rofi 
./vercanium market
ps -l | where name =~ "auto"
cd zero
grep -f /usr/bin/waybar
sudo su
z hot
rmdir time_wait/
mv index.html char.html
ansible all -m ping
cd demo
4000 + 3000 
cd github.com/
notify-send --help
how stupid it is 
mkdir hot
sudo vim grub
docker start redis-3
netstat-nat 
pkill sway 
repo https://github.com/huihongxiao/MIT6.S081.git
sudo rm -rf foot 
pacmanfm
touch mongod.log
hotpot e go run main.go
sudo lsof --help
swaymsg "move to scratchpad [app_id=\"org.wezfurlong.wezterm\"]"
rm test.go
curl localhost:3000/v1/word/query?word=习近平
man nwg-wrapper 
ps -l | where name =~ "code"
systemctl start  mongodb
go run build 
bluemoon
docker run elasticsearch:8.14.1
./main 计算机
ss -tuna | grep 3000 
rm-rf go-std
sudo mv once /usr/bin/once
starship prompt
z template
chromedriver 
wob.sh
sudo ls 
rm -rf Partitions/surfing-vault-6096c13e1403409b/GPUCache/
cd go-grpc-demo/
pkill showkeys
cd toolbox/
file /usr/bin/hyfetch
sudo mv hotpot /usr/bin/hotpot-dev
ps -l | where name =~ "sh"
git clone --depth=1 https://github.com/uber-go/zap.git
curl http://localhost:3000/v1/dictQuery?word=%E4%B9%A0%E8%BF%91%E5%B9%B3
./tiu
xray help run 
cd hot
mkdir nsq
fd string
docker ps -a
docker run --name redis:alpine
nmtui
./rpc-capture rs
cd client
ls -l  /usr/bin/autotiling
./make.py
vim user-flags.conf
eww ing
goctl
pc sql.go
pacman -Q openjdk
yay ansibe
cd grub.d/
cd keys
cliphist
swaymsg reload
cp -r nwg-look ~/.config
pgrep vscode
go env 
docker stop redis 
cd once
cd .config 
yay --noconfirm key map
ps -l | where name =~ "tail"
ll assets
scp ./main 82.157.251.19:/root/query
cd main
hello 
vim grub
cd i18n/
hotpot init 
cp -r ./template/ embed 
./rem shh
yay wev
go run transform.go -f etc/transform.yaml
cd unary/
cd ver
docker rm redis 
mhwd -li
pkill swayidel
z kata
docker run  --ip 172.39.1.10 -v /etc/redis/redis.conf:/etc/redis/redis.conf myredis:0.0.1
sudo cat /proc/meminfo
starship
gen cli hello
uname 
you are right 
vim wob/
yay elastic 
fddd 
./bin cli
git branch  -a 
why 
z nvim
protoc --help
cd web/
wget localhost:9191/stream 
brightnessctl set 10
mkdir cross-platform 
0x20
fd proto
sudo netstat -napt
docker stop clickhouse 
starship module golang
cd sway
pgrep -l -f /usr/bin/waybar
git clnoe --depth=1 https://github.com/M8850/Evremap-GUI.git
netstat-nat  
systemctl --help
which fdd 
cd grpc-demo
repo https://github.com/ccfos/nightingale.git
minikube dashboard
ps -l | where name =~ "clash"
starship module
/home/km/Templates/python/venv/bin/obsidianhtml serve --directory output/html --port 8000
mako
obsidianhtml convert -i config.yaml<\n>
git commit -m "add linux and windows release version"
rem 
ssh root@21.123.12.12
ps | where name =~ "waybart"
ps | where mem > 100Mib  | select name mem  | sort-by mem 
hotpot d
git tag 
gen init crossplatform 
./epilogue epilogue
mongod 
repo https://github.com/TsMask/graphql-server-go.git
z benchmakr
notify-send -i Feishu hello 
pkill wemeet
cp -r template pprof
cd mod
docker run --name redis-cluster-2 -d myredis:0.0.1
cp -r nwg-look/ ~/.config
protoc --go_out=./api/. --go-grpc_out=./api/. --proto-path=/home/km/go/src  ./api/example.proto 
./rpc-capture cap
cd common/
z fiber
pgrep -a -f wob
sudo mv pc /usr/bin/pc
/home/km/Templates/python/venv/bin/obsidianhtml  convert -i ./config.yaml<\n>
fd go-files
./bin 
ls --help
rm rm epilogue
cd escape/
cp user-flags.conf ../user-flags.conf
z hotpot\
docker run --name redis-test myredis:0.0.1
cd Thunar/
vim tet.txt
vim hotpot.toml
cd ..
docker network create redis
cp -r gtk-3.0/ ~/.config
code .
mv index index.html
cd work
cd gtk-4.0/
touch .vimrc
kubectl
cd vercanium/
nvim style
./cmd 
docker start clickhosue
cd /
sys mem 
mkdir export 
mkdir es-demo
cd /etc
alias v 
cd 6.5840-golabs-2024/
foot-clinet
cd tcp
cd python/
go  config
~/.config/sway/scripts/wob.sls
yay xclip
wofi --show -icons
eww ping
sudo netstat-nat   -p tcp
cd client 
swayidle  -w timeout 10
notify-send -i /usr/bin/apifox hello 
pkill swayidle
mv code-flags.conf ./Code/
mkdir goquery 
ls | select name type  | where type == file | get name  |  each  {|it|  rm $it}
wev
clash --help
cd provider/
z git 
yay --noconfirm
curl localhost:9191/stream 
clash-meta  -f ~/.local/share/io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml
cd mongodb/
fd rpc
ss | grep 127.0.0.1:3000
cd system
5 + 8 + 9 + 8 
z github]
which clash-mata
ps | where mem > 100Mib  | select name mem  | sort-by mem  | reverse  | first 5 
man nwg-drawer
cd .config/nushell
mv --help
keyd
cd gen-test/
./clean-yay
pgrep -f waybar
docker start redis 
go tool pprof -inuse_space http://127.0.0.1:8080/debug/pprof/heap
cat test.sh 
gofmt -w /tmp/main.go
fd go
cd crossplatform/
make
sudo bandwhich
go run main.go | save -f test.json 
cd dict
wofi --show
protoc --go_out=./api/. --go-grpc_out=./api/.   ./api/*.proto 
gen init mongodb 
hotpot w 
manjaro-downgrade obsidian 
docker start clickhouse
gh repo 
helm upgrade --install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard 
./hotpot 
file /usr/bin/fastfetch
yay --noconfirm Thunar
gh repo clone huihongxiao/MIT6.S081
KEYS
cd api-client/
curl localhost:9200
z gin
pc dict
update-grub
cd ../../
pgrep  waybar
pkexec file
cd nvim
fd css
fd ci
redis-cli 
helm upgrade --install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard --create-namespace --namespace kubernetes-dashboard<\n>
go mod init client 
curl localhost:9008
cd data
pgrep -f  clash-verge
kubeadmi
wl-clip-persist -d
cool
ps | where mem > 100Mib | group 10 | get 2 
go env
curl http://localhost:3000/v1/word/query/?word=好 | save -f ggood.json
z once
ss | grep 3000
cd test
nvim
ps | where mem > 10Mib | where mem < 100Mib  | select  name mem 
mongoc
pgrep  -f waybar
just do it 
pwd
go build main.go 
git commit -m "7-22"
docker container rm redis 
gen init hot
sudo netstat-nat -p tcp -s localhost
ss  | grep "listen|LISTEN"<\n><\n>
wev --help
netstat-nat
clean 
curl localhost:3000/v1/word/query?word=english
journalctl  --help
vim conf
tproxy -p 3001 -r localhost:300 -t rpc -d 100ms
generate 
cd toolbox
gen hotpot-demo
1 * 1024 * 1024 / 1000 / 1000
docker images
sudo wev 
z vercanium
go build ; sudo mv hotpot /usr/bin/hotpot
go build ; ./epilogue epilogue
kubectl nodes
keyd-application-mapper 
.
wofi  --gtk-dark --show drun
pacman -Qi openjdk
which code
./once.sh  /usr/bin/waybar
go run . | rofi -dmenu
rm -rf hot
vim clean-history
git tag v0.0.2
	go install github.com/ofabry/go-callvis@master
hotpot e ./make.py
yay 
ss | grep 127.0.0.1:7897
docker stop redis-2
du 
yay --noconfirm wofi
z python
ls electron 
cd Documents/ls
go run dp.go
mongod  
cd github/
ss -s | grep "listen|LISTEN"<\n><\n>
cp -r grpc-demo/ grpc-example
sudovim redis.conf
cp -r nwgbar-icons ~/.config
touch remember.db
neofetch
yay --noconfirm -S nwg-drawer
hotpt
his
docker run elasticsearch 8.14.1
yay typora 
mongosh 
docker run --name redis-cluster-5 -d myredis:0.0.1
journalctl --disk-usage<\n>
mkdir client
mongos 
the fast way to deploy your server 
cd scripts/
which electron
vim json.txt
ls | select name type  | where type == file | get name  |  each <\n>
ps | where mem > 100Mib
p 
cd sway 
tproxy -p 3001 -r localhost:300  -d 100ms
wl-clip-persist  --server
ps | where name =~ "clash"
cd hello
wofi  --show drun
python translate.py
z notebook
path 
minikube start<\n>
kubectl get services 
cd .local
cd google
man keyd
rmdir rpc
~/.config/sway/scripts/help.sh --toggle
pgrep -f vscode
cd ci
fd code-flags.conf
go tool pprof -http=:8080 cpu.pprof
touch main.ipynb
./epilogue epilogue\
poweroff
pgrep  -l -f   waybar 
yay clash verge
journalctl -r
hotpot init
pkill waybar
touch default.conf
sudo mv ret /usr/bin/ret
pls
rm epilogue
cat wob.ini
vim .vimrc
vim .wezterm.lua
sudo file 
manjaro-sway-settings
rm main.go 
cd one-api/
python test.py
gen  init gen-test
vim wob.ini
gofmt  --help
cd interview
docker run --name redis-cluster-4 -d myredis:0.0.1
curl http://localhost:3000/v1/word/query?word=%E5%A5%BD | save ggood.json
pgrep clash-verge
sudo netstat-nat  
mongosh --username mangodb --password cmstop
rmdir esdemo
wemeet
cd script/
docker start redis-4
alias v=vim
sudo rm  /run/log/journal/* 
rm *.py
rm *.pprof
right 
git add  * 
hugo --help
hotpot 
./once hello
yay hugo
mkdir grpc-client
python translate.py --json_file_path=./en.json
ss -tuna<\n>
sudo rm * 
curl http://localhost:3000/v1/word/query?word=%E5%A5%BD | save -f ggood.json
go build ; sudo mv once /usr/bin/once
footclinet
autotiling
pnpm 
kubectl pods
ls -l /usr/bin/clash
yay --noconfirm graphviz
go run main.g o
go mod tidy 
yay manjaro theme 
gin
log out
mkdir log
pkill waybar 
yay -R go
z fish
cp -r nwg-launchers/ ~/.config
sudo systemctl start  mongodb
which go
once clash-meta -d ~/.local/share/io.github.clash-verge-rev.clash-verge-rev -f ~/.local/share/io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml
mv char.html index.html
z gen
sudo rm -rf *
ps | where crp
cd server
cd tools
yay 11 
which mihomo
sudo vim /etc/bin/pc
wl-clip-persist  --help
wofi --help
fd wob
sudo manjaro-downgrade obsidian
pgrep -f /usr/bin/waybar
10 * 30  * 40
1 * 1024 * 1024
make start 
go build 
cd api
etcdctl  
fd protoc
docker run --name redis  redis:alpine
npm install 
pgrep -f waybar 
notify-send -i google hello 
cat VERSION
systemctl status docker 
hugo 
mkdir rpc 
go run -race main.go
starship module --list | save -f log
wofi --show-run
cd Desktop/
docker container 
go test -bench ,.
mysql -u root 
nwg-drawer
go-callvis main.go
netstat -s | grep "listen|LISTEN"<\n><\n>
man nwg-warpper
minikube list
./wezterm.sh
pacman -Qi clickhouse
rmdir chromedp/
redis-cli
clash-meta -f ~/.config/clash/config.yaml
cd tiu
ps | where mem > 100Mib  | select name mem  | sort-by mem  | reverse  | limit 10 
tokie
rm -rf hello
cd Applications/
cd mm
alias
cd Dress/
rem hello
swaymsg "[app_id=org.wezfurlong.wezterm] move to scratchpad"
z github
go run main.go cli
wob
yay alacritty
history | last 5 | get command|  save -f log
sudo lsof etcd
netui
cd grpc-go/
fd -d 
clash-meta -d ~/.local/share/io.github.clash-verge-rev.clash-verge-rev -f ~/.local/share/io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml<\n>
tcpdump 
git stash pop 
sworkstyle
./rem docker
kill 1675
ps -l  | where mem > 10Mib
code . 
kubectl get pod
docker stop redis-cluster-5
mv code-flags.conf code-flags.conf-disable
ansible --help
3150 / 180
./hello
tcpdump\
which clash-verge
yay manjaro sway 
cp user-flags.conf ./Code/
netstat-nat  -nat
vim /etc/profile
hugo new content post
vim im-multipress.conf
yay tcpdump
rm | where type = file
go version
pgrep swayrd
cd grpc-server/
ps | where mem > 100Mib  | select  name mem 
which pp 
touch process_test.go
vim config
cd hwmon6/
z tools
ls | select name type  | where type == file
netstat -an 
redis-cli -h 172.39.1.6 -p 10001
cd etcd
git clone https://github.com/LazyVim/starter ~/.config/nvim
python header_parser.py
top
cd Xray-core/
python 
once /usr/bin/code
swayidle
yay --noconfirm pnpm 
go  build 
etcd --help
gen cmd 
z Note
once clash-meta
2.7 * 14
mv google/ /home/km/src
how stupid 
v
docker iamges
nwg-wrapper  --help
vim /etc/bash.bashrc
cd /tmp
fd Code/
curl localhost:3000/v1/word/query 计算
fd ~ .
ss -tuna
python nutstore.py
sudo tcpdump  tcp prot 3000
pgrep -a vscode
pgrep -a clash-verge
./bin args 
git rebase origin/master 
swaylock
vim config.yaml
z hotpot-demo
go run  main.go 
neofetch 
gofmt -s -w /tmp/main.go
once
wemeet-x11
hotpot e  go run main.go 
nvtop
z export 
sad 
go build -buildmode=plugin ../marapps/wc.go
protoc --go_out=./api/. --go-grpc_out=./api/.  -I=/home/km/go/src ./api/*.proto 
yay micro
lscpu
cd vim
cd go/cli
swaymsg "scratchpad show "
cd /var
git checkout -b develop
swayidle -w timeout 5 "brightnessctl -s && brightnessctl set 10" resume "brightnessctl -r"
git push -f 
git clone --depth=1 https://github.com/yurihikari/garuda-sway-config.git
which cli
rm main
ps | where name =~ "wob"
gh repo clone KM911/GO-CI
protoc --go_out=. --go-grpc_out=. example.proto <\n>
z note
./rem ssh
sudo vim default.conf
cd ls
5 + 4  + 3 + 2 + 1 
tproxy
docker run --name redis-test1 myredis:0.0.1 -v /etc/redis/redis.conf:/etc/redis/redis.conf
cd okg
ssh root@87.123.12.12 
hotpot-dev 
yay mail
./rem docker image
./ret
docker run elasticsearch:5.0.0 
clash-meta
rem
minikube --help
pgrep -x /usr/bin/waybar
code.
./bin
rm go.mod
logo
which vscode
etcdctl  client
rmdir embed 
docker run --name redis-test2 -v /etc/redis/redis.conf:/etc/redis/redis.conf myredis:0.0.1
cd go
cd /sys
vim init.lua
m go proxy
gen init rpc-capture
yay obsidian 
starship module cpp
yay --noconfirm -S protobuf
pgrep --help
git  add * 
rm -rf .config
inix -G 
make doc
160 * 22
ps | where name =~ "ele"
kubectl get rs
cp -r ./template ./gen
code /home/km/.cache/tools/remember.db
cp -r template/ grpc-demo
cd bin
ls | select name type 
go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway<\n>
3960 / 180 1+6 dan I need to make bigger money , how , enter the bigger company , every thing will be fine 
kubectl get nodes
ps 
./tiu upload
cd upload
fd KM911
gprep -f swayidle
sudo go build -o /usr/bin/gen
rm mr-out*
notify-send just
sudo netstat-nat 
swayidle -w timeout 10 echo hello
47 / 12
repo https://github.com/lonnyzhang423/douyin-hot-hub.git
cat /proc/sys/net/ipv4/tcp_fin_timeout
vimn test.go
cd goquery/
bandwhich
protoc --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
ss | rg 3000
pgrep  -a waybar
pgrep -l vscode
cd code/go
	redis-cli --cluster create 172.17.0.2:6379 172.17.0.3:6379 172.13.0.4:6379 172.17.0.5:6379 172.17.0.6:6379 172.17.0.7:6379 --cluster-replicas 1
cd template
cd aata
pp 
ps | where mem > 100Mib | group 10
args
which clash
ip -a
docker start redis-2
yay --noconfirm  -S manjaro-downgrade
cp wob.ini default.ini
ls 
clash-verge
cd clash-core/
fd files
fd -type d . 
waybar 
go get github.com/PuerkitoBio/goquery
cd Xboard/
z hello
curl localhost:3000/v1/word/query?word=计
bash test.sh
docker run --network redis --name redis-1 -d  myredis:0.0.1
fish 
git clone --depth=1 https://github.com/catppuccin/swaylock.git
cd /temp
mkdir gen 
rm cmd
kubectl get pods
cd benchmarks/
cd grpc-demo/
./go env 
swaymsg "scratchpad show"
ps | where mem > 100Mib | select name mem  | math sum 
cd syst
mkdir remap
hotpot e go run main.go 
cd protobuf/
ps | where  ppid = 141403
flashfetch 
go install  google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
cd garuda-sway-config/
wofi 
cdl
go run client/main.go
ps -l | where name =~ "wob"
rm stream
echo 23 >>hotpot.sock
wl-clip-persist --help
cd venv/
sudo netstat-nat -p tcp -s localhost:3000
brightnessctl 10
yay --noconfirm protoc
mv src go/
vim repo
cava 
vim main.rs
./rem echo he
repo huihongxiao/MIT6.824
pp wob
inxi -G
cd go=template/
rm -rf foot
cd api-server/
cd go-grpc-demo
sh -c "$(curl -fsSL https://raw.githubusercontent.com/Battlesquid/dotfiles/main/install.sh)"
sudo rm /usr/bin/vim 
pkill keys 
mkdir src
yay miku theme 
cd `Nutstore Files/`
once.sh
nwg-launchers
pgrep -l -f waybar
z cute
ps -i 12990
mkdir embed 
z export
go build -o gen && sudo mv gen /usr/bin/gen
gopls 
journalctl  -xeu
starship module  go
netstat -napt
cave
fd proto -x mv {} /home/km/code/go/grpc-demo/{.}
man way-displays
once code
upx 
mv 计算机 index.html
pkexec pacmanfm
docker start mysql redis 
yay protco-gen-go-grpc 
pgrep -l -f way
arch 
mongodb/
fd -D
kubectl get replicate
cd grpc-client/
cri
bash -c echo hello | gerp h
touch main.go 
cd opt
sudo tcpdump -iany tcp prot 3000
./make
16 * 256
obsidianhtml serve --directory output/html --port 8000<\n>
ps | where mem > 100Mib  | get name,mem 
fd -type d
180 * 22
10 * 30  * 50
z dict
go mod tid y
sudo mv rem /usr/bin/rem
cd zero-examples/
pgrep -a waybar
git rebase orgin:master 
starship module csharp
size /usr/bin/clash
swayidle -w timeout 5 "echo hello" resume "echo back"
cd Templates/
notify-send -i /usr/bin/code hello 
rm -rf lib
ps | where mem > 100Mib | select name mem 
gen 
start 
docker run --network redis --name redis-2 -d  myredis:0.0.1
ls | select name type  | where type == file | get name echo $in
z etcd
cd gin
3960 / 180
cd .github
yay --noconfirm keymonad
cd $GOPATH/src/google/api/annotations.proto
pgrep waybar
mkdir google
swayrd --help
file /usr/bin/pc
echo hello
export hello=12
git rebase origin:master 
go mod init bin
cd format
which hyfetch
pacman -Qi qt<\n>
sys disk 
pp
cd router
hello
yay etcd client 
mongos --help
kubectl get deploy nginx-deploy --show-labels
find -type d  . 
cd .go
cyberfisher 
5 + 4 + 6 + 4
docker es 
go run maing.o 
sudo lsof bin
go-callvis  main
bash 
go  run main.go 
rmdir grpc
yay  --noconfirm protco-gen-go-grpc 
footclient
sudo tcpdump -v host 127.0.0.1 
curl http://localhost:3000/v1/word/query?word=%E5%A5%BD
ks
cd wob
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
fd go/src
ls -l /usr/bin/xray
git clone --depth=1 https://github.com/M8850/Evremap-GUI.git
go mod tiyd 
cat /tmp
cp -r ./template/ go=template
mihomo
gen init hotpot-demo
./gin 
cd waybar
mkdir ansible
ls | select name type  | where type == file | get name  | flatten | rm $in
m go static 
hotpot-dev e echo hello
fd theme
notify-send -i obsidian hello 
npm run build 
etcdctl  put 1
go mod init toolbox
cd douyin/
go build -o hotpot ; sudo mv hotpot /usr/bin/hotpot 
swaymsg "move [app_id=org.wezfurlong.wezterm] to scratchpad"
z hotpot
ps | where mem > 100Mib  | get name mem 
npm proxy 
swaylock 
rm test12651927641
rm -rf *
git push --set-upstream origin develop
rm -rf fish 
pkill obsidian 
cd grpc
cd wob.ini
file
z hotpot 
vim
sudo mv go-callvis /usr/bin/go-callvis
touch config.yaml
which rofi 
cd remap/
cat main.go
z test
xray 
mv index.json word.json
file /usr/bin/verge-mihomo
git commit --amend 
lsof bin
$ nsqd --lookupd-tcp-address=127.0.0.1:4160<\n>
git clone --depth=1 https://github.com/Kuingsmile/clash-core.git
16 * 4
poweroff 
repo https://github.com/huihongxiao/MIT6.824.git
cd ../python/
kubectl get -h
docker ps -a 
z vevn
cp -r api/ ./grpc-client/
mkdir hotpot
fd 
yay xray core 
go mod init server
cp code-flags.conf-disable code-flags.conf
ps -aux | grep aaa
history | last 5 | save -f log
ps -l | where name =~ "waybar"
ls | select name type  | where type == file | get name  || flatten
git clone --depth=1 https://github.com/songquanpeng/one-api.git
sudo clean-yay 
vim hugo-theme-stack-starter/
etcd
cd .obsidian
eww
vim redis.conf
intervimew
yay etcd
yay --noconfirm -S xhost
bluetuith 
mongosh --username mongodb --password cmstop
sudo netstat-nat -s 127.0.0.1
brightnessctl -s
ssh root@21123.12.12
sys cpu | get names
rm tiu.exe
nwg-wrapper
swayidle -w timeout 10 "echo hello"
I do not know 
wl-paste --watch cliphist store
mkdir .config
mkfifo /tmp/wobpipe
nsqlookupd
yay helm
vim app.go
rofi-wayland
vim .zshrc
mkdir zero
vim 计算机
yay bandwhich
cd slice
ls | select name type  | where type == file | get name  | flatten
m rs release 
bash -c echo hello go run main.go 
docker run myredis --name redsi-test
cd default/
cd Documents
vim 
l
gen init test-cli
dust 
sudo  cat /proc/meminfo | grep Table<\n>
rm hot
journalctl 
sudo bg 1panel
sys cpu | get cpu_usage
cd go-callvis/
sys get disk 
yay xray-core
0x60
once /usr/bin/autotiling
go install github.com/go-swagger/go-swagger/cmd/swagger@latest
wofi --show drun 
rm -rf nvim
cd graphql-server-go/
yay --noconfirm  nsql
go mod init client
yay --noconfirm key remap wayland
hestory | 10
rm test
ps | where ppid ==141403
yay --noconfirm neovim 
rm -rf go
wl-paste --watch waybar-signal clipboard
kubectl get deploys
rm default.ini
gen init kata
mv index.html index
cat profile.md | wl-copy
cdoe .
cd ip
pc google
cd kata
pnpm config set registry=https://registry.npmmirror.com
kubectl list
cd hwmon/
cd grpc-client 
grep -f /usr/bin/clash-verge
vim uca.xml
brightnessctl -r
47 / 14
ping google.com
go-callvis main
cp -r client ./api-client
fd GPU
protoc --go_out=./api/. --go-grpc_out=./api/. ./api/*.proto 
gen init go-zero
notify-send -i feishu hello 
ps | where name =~ "ala"
python back.py
once fcitx
vim default.conf
./rem echo hello
ps | where  name =~ "foot"
z sway 
docker stop redis-cluster-2
who 
cd .dotfile
cd GO-CI/
ip -a 
pip install pillow 
cd rpc
mkdir toolbox
kubectl get deploy nginx-deploy -o yaml
vim log
170 -26 - 24
vim test.file
./rem docker images
z dress
git reset --soft d06538ca913f245c5043d68e82ac2f60e43c9cd7
swayidle -w timeout 5 "brightnessctl set 10" resume "brightnessctl set 80"
mongodb
gen init interview
pgrep -f /usr/bin/clash-verge
z keyd
vim default/
eww 
electron 
cd rempa
docker images 
docker start --net redis myredis:0.0.1
ls | select name type  | where type == file | get name  |  each  {echo $}
docker run --name redis -p 6379:6379 -d redis:alpine
swag init 
go get github.com/KM911/fish
z tcp
pamac list --orphans 
yay --noconfirm github  desktop
clash -f ~/.config/clash/config.yaml
cd python
ok every 
reboot 
ret
vim lua
ls | where type = file
cd xdg
ps | where  ppid =~ 141403
mkdir tools 
./bin args  1
cd app
z rust
fd proto -x echo {.} 
10 * 30  
starship module c
micro
notify-send -i code hello 
cd .cache
mkdir time_wait
chmod +x repo
yay --noconfirm kafka
it
gitui
wofi --show 
mv ret /usr/bin/ret
pp example.proto
cd cache
cd .obsidian/
go build -buildmode=plugin ../mrapps/wc.go
rm -rf .git
mkdir cli 
kubectl po
yay istio
sudo netstat-nat -n
go test 
cd tsl
pip install obsidianhtml
wget https://www.douyin.com/search/%E5%88%80%E7%BE%A4%E8%88%9E%E6%8C%91%E6%88%98 
sudo vim redis.conf
gen init provider
pgrep -f clash-verge
go get google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
5000 / 22 
cd fish
cd class
./rem
size clash
fastfetch 
sudo lsof -i:3000
./rem sudo vim /etc/environment
cd grpc-example
sudo mhwd-kernel -li
cd Library/
group 
pacman -Qi apifox-bin
./a.out hello just do tit 
vim code-flags.conf-disable
nemo
notify-send hello
sudo chmod +x make.py
repo https://github.com/KM911/tiu.git
ps -l | where name =~ "clash-verge"
rm -rf foot 
/home/km/.config/sway/scripts
go arch
rmdir  .gitbook/
./go
tar -C /usr/local -xzf go1.22.5.linux-amd64.tar.gz<\n>
args 133 2
pgrep -f  /usr/bin/clash-verge
rmdir hotpot
pgrep -a clash-meta
xray version 
pkill wbo
cp -r nwg-wrapper/ ~/.config
`sudo evremap list-devices`
gen cmd
ansible -i host all -m ping
cd ttemplate
bash -c echo hello | grep h
rember
cd .confgi
ssh root@22.123.12.12 
go get server/api
rm test.txt
redis-cli -h 172.39.1.3 -p 10001
rm -rf waybar
protoc --go_out=.  demo.proto <\n>
docker stop redis-cluster-1
ls -l /usr/bin/clash-verge
sudo netstat-nat -d localhost
fd sysctl
yay go-torch
Makefile
vim .npmrc
fd 冲突
zeit
ss
etcdctl get key
rm -rf template/
impl
go tool pprof -http=:7778 http://localhost:8080/debug/pprof/heap<\n>
python main.py
pc 
mv gin /home/km/Documents/
ss 
make coor
pacman -Q java
fd conf
rm *
systemctl cat mongodb | grep ExecStart<\n>
wl-clip-persist --help 
start "/home/km/Nutstore Files/Notebook/RESOURCE/IMAGE/hotpot.gif"
sudo pkill wob
swayidle -w timeout 5 "brightnessctl set 10" resume "brightnessctl set -r"
go-callvis main.go args hello
z ep
proto  --go_out=api --go-grpc_out=api ./api/example.proto 
repo https://github.com/cuixueshe/earthworm.git
fdd
kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.39 -- /agnhost netexec --http-port=8080<\n>
netstat-nat -an
protoc .
vim config.jsonc
ps | where cpu > 1
yay manjaro sway theme
journalctl -S=7
docker run --network redis myredis:0.0.1
hyfetch 
z go
cd fcitx5/
git reset --soft 9bb5b27df0490373b987fcfc2034ef7a32a8f8ed
rm ep
z work
go run . | rofi -dmenu | echo 
nu --help
manjaro-sway-theme 
which clean 
1548433385
gitlog
docker container prune -f 
rem --help
rm main.go
cp -r ./template/ rpc
swag
pkill elecron
just do what it want 
gen init etcd
rm -rf tsl
mysql 
npm install && npm run build 
wget https://www.douyin.com/discover
weather 
feishu
cp -l /home/km/code/go/grpc-demo/grpc-server/Makefile ./Makefile
z bench
go mod tidy
vim env.nu
sudo vim /etc/environment 
alias v vim 
env | grep go
kubectl get events<\n>
kubectl get deploy nginx-deploy --show-labes
starship --help
kubectl show pods 
git add *
wofi help
cd code
./onec
dex
npm config set registry=https://registry.npmmirror.com
cd sys
vim stream
mv back_code-flags.conf code-flags.conf
cd tui
wofi --show-drun
gen cli
cp -r template/ grpc
fd .
echo 43 > /tmp/wobpipe
gen cli obsidian-execute-code-enhancement-go
repo gh repo clone huihongxiao/MIT6.S081
cd KM911/
alias 
etcdctl  get hello
cd .obsidian 
right
redis-cli -h 172.39.1.2<\n>
rm -rf obsidian/
vim default
rofi
gh auth login
./wob.sh
mkdir venv 
vim gtk-dark.css
rmdir pprof
180 * 22 
minikube dashboard 
sudo lsof -i:50051
swayidle -w timeout 5 "echo hello"
I am super glag waht you have come 
z venv
calcurse
vim nutstore.py
docker stop minikube
cd shorturl/
pgrep -a -f clash-verge
cd /opt
z grpc
fd mp3
mkdir target 
docker run --network redis --ip 172.17.0.4 myredis:0.0.1
cd Screenshots/
go build -o hotpot ; sudo mv /usr/bin/hotpot 
protoc --go_out=. --go-grpc_out=. demo.proto <\n>
go run . | rofi -dmenu | cliphist decode | wl-copy
vim tet.tx
gen cli args 
sudo mv hotpot /usr/bin/hotpot
vim /etc/environment
ps | where mem > 100Mib | math sum 
cd download/
sudo cp -r ~/.config/gtk-3.0 /etc
./server 
python version
touch main.go
yay ansible
curl localhost:3000/v1/word/query?word=just
mkdir grpc-http
ss | grep 0.0.0.0:3000
pkill clash-meta
ls | select name type  | where type == file | get name | echo $in
make doc 
rm /usr/bin/pc
ls | select name type  | where type == file | get name  |  each { |it| $"Hello, ($it)!" }<\n>
sudo vim /etc/environment
cd ../code/go
rm -rf * 
cd  zero
which autotiling
which which
cd grpc-example/ls
mkdir fish
vim .profile
hotpot-dev e go run main.go
but 
git clone --depth=1 https://github.com/songquanpeng/go-file.git
cd /usr/bin/
protoc  -I --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
ps | where pid = 12990
22 * 180
wemeet 
./once
cd lib
once tail -f /tmp/wobpipe | wob &<\n>
sudo mhwd 
cd mysql
go build ; sudo mv hotpot /usr/bin/hotpot-dev
cat dzg.pdf
repo github.com/huihongxiao/MIT6.824
cp -r api/ ./grpc-server/
bash test-mr.sh
alias v = vim
mangod
yay k8s
pnpm install 
starship module rust
waybar
cd epilogue/
cd MIT/
kubectl create deploy nginx-deploy --image=nginx:1.7.9
docker stop redis-cluster-4
curl localhost:3000/word/query 计算
nsqd --lookupd-tcp-address=127.0.0.1:4160<\n>
python make.py
repo git://g.csail.mit.edu/6.5840-golabs-2024 6.5840<\n>
./brightness.sh up
minikube start 
systemctl status mongodb
find  . -type d  
cd grpc-example/
cd .config
yay -Runc siyuan-note-bin
once wob
cp -r dict /home/km/work/vercanium/common
a
cd chromedp/
rm /home/km/go/bin/go-callvis
touch config.toml
gen
sys cpu
go ru main.go
z /usr/bin/
protoc --go_out=./api/. --go-grpc_out=./api/. --proto_path=/home/km/Downloads/google  ./api/example.proto 
./tools sudo vim /etc/environment
make seq
./weather.py
swayidle 
once waybar 
pacman -Qi feishu
kafka-jmx.sh 
cd content
file /usr/bin/vim
mkdir slice
rm log
git push 00set-upstream origin develop
hotpot -e ./make.py
mkdir grpc-server
rm -rf  hello
git switch develop
git push 
gen init load-balance
tokei
pgrep  -f "/usr/bin/waybar"
cd main.go
go build ; sudo mv gen /usr/bin/gen
fd NSCon
kubectl proxy<\n>
ps | get name
sudo chmod 777 mongod.log
echo 23  | hotpot.sock
once foot --server
cp -r ./cli ./gen
docker start --network redis myredis:0.0.1
pnpm run tauri dev
rm -rf pprof/
gen init once
z 
z json
history
cp -r wofi ~/.config/wofi
repo https://github.com/cnbattle/douyin.git
kubectl get pods 
./once.sh
z config
wget https://www.zdic.net/hans/%E8%AE%A1%E7%AE%97%E6%9C%BA -o index.html
sudo cp repo /usr/bin/repo
neovim
vim main.go 
python -m venv python 
mongod
networkctl 
cd export 
clahs -c 
yay --noconfirm evremap
lsd
sudo netstat-nat   -nat
ps | where mem > 100Mib  | select name mem  | sort-by mem  | reverse  | ulimit 5
ps | where name =~ "waybar"
rm -rf google
vim pymake.py
protoc   --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
cd wofi
sudo rm /run/log/journal/* 
protobuf
notify-send -i 
yay manjaro-downgrade
pc wob.sh
xray --help
redis-cilent
cd grpc-client
swaymsg "[app_id=org.wezfurlong.wezterm] scratchpad show"
docker network prune
pc example.proto
ls -f
cd src
cd Downloads/
tree
range 10- 20 
protoc --go_out=. example.proto
ansible web -m ping
rm /usr/bin/vim 
cargo run 
cd config
kubectl get deployments<\n>
go instal swag
swaymsg -t get_tree
cd remote
yay netstat
xhost nemo
vim user-dirs.conf
netstat-net -an
ps | where ppid = "141403"
helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/<\n>
nwg-drawer help
history --help
ssh root@21.123.12.12 -p
open test.log
make build 
starship prompt | save -f log
kubectl edit deploy nginx-deploy
goctl api -o shorturl.api
ps | where mem > 100Mib | group 1
cp dzg.pdf 1.mp4
12000 
bluetoothctl 
cd output/
go run main.go args
pgrep /usr/bin/waybar
btm
du
n
docker exec -it minikube
ls | select name type  | where type == file | get name  |  each  {echo $it}
starship module python
curl https://cidian.qianp.com/ci/%E8%AE%A1%E7%AE%97%E6%9C%BA
go run mai.go
ansible 
kubectl get
fd code
kubectl get deploy
mongod --help
cd go-std/
/home/km/Templates/python/venv/bin
swayidle -w timeout 5 "brightnessctl set 10" resume "brightnessctl -r"
go run mian.og
gen init 
nvim user-dirs.dirs
go build -o gen
repo  git://github.com/mit-pdos/xv6-public.git
z nushell
alacritty 
args 
sudo mv go /usr/local
tproxy -p 3001 -r localhost:3000 -d 100ms
chmox +x repo
cd foot
cd swaylock/
rem echo hello
curl http://localhost:3000/v1/word/query?word=好 | save -f ggood.json
gh 
protoc --go_out=./api/. --go-grpc_out=./api/.   ./api/example.proto 
git pull 
rm main.go\
group list
ls | where name  =~ "time"
proto  --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto 
mongosh -u mongo -p 
ls | select name type  | where type == file | get name  |  each  {|it|  echo $it}
ceva
cd sysconfig/
yay --noconfirm manjaro theme
./pc
sudo tcpdump port 3000
sudo rm -r ./target
vim mongodb.conf
cd time_wait/
pacman -Qi jdk-openjdk
go run main.go w
cd tokio-example/
etcdctl get hello
cd google/
rm *.log
starship module  package
cat wobpipe
fdd 
notify-send -i apifox hello 
fd single
nwg-wrapper 
cd yazi
ls
git stash pop
cd target
make start
cd clash
cd 
cd rofi
sudo mhwd-kernel -r linux66
fd journal/
ps | where mem > 100Mib | head 10 
ldd /usr/bin/verge-mihomo
protoc --go_out=.
./once.sh  waybar
cd goquery 
rm remember.db/
cd rpc-capture/
go test -bench .
vim test.json
vim config.toml
cd out
cd swaylock
make 
mongosh --username mongo --password cmstop
gen init time_wait
go run mrworker.go wc.so
hugo server
docker exec -it  minikube /bin/bash
xdg 
htop
ansible  --list-hosts
notify-send do
180 * 18
ls | select name type  | where type == file | echo $in
cd flags
man sway
docker container  prune
yay protoc
lazyvim 
z /etc
cat /etc/sysconfig/kernel
man sway 
history | length
256 ** 15
z repo
docker start redis-1
redis-cli -h 172.17.0.3  
yay upx 
what 
ps | where name =~ "obsidian"
~/.config/sway/scripts/wob.sh 
wofi show
tree | wl-copy
mkdir grpc
cd themes/
cp -r wob ~/.config
docker network ls 
cd ReverseList/
go run mrsequential.go wc.so pg*.txt
$ go install github.com/kevwan/tproxy@latest
fd *.proto
kubectl get deploy nginx-deploy --show-lables
cp -r fish ~/.config
mv -r grpc-demo/ grpc-example
git clone https://github.com/CaiJimmy/hugo-theme-stack-starter.git
cd hotpot-demo/
wl-paste
clash 
go-callvis 
git init 
gh repo view
cp -r ~/.config/gtk-3.0 /etc
sudo systemctl status  mongodb
hyperfine 
hotpot h
yay nemo
go rum main.go
make docs
ssh root@82.157.251.19
gp mod init server
hotpot -e rem
cp -r template es-demo
go env | grep ARCH
ls  /usr/bin/autotiling
ls | select name type  | where type = file
rm -rf GPUCache/
sudo vim mongodb.conf
nu
cd /run/log
make cluster
rm /usr/bin/gen
etcdctl  put key value 
netstat -nat
z donwload
cd rust
go env | grep GOPATH
pgrep -f ""
mongosh --username root --password cmstop
chrome
sudo netstat-nat -a
go exit
pgrep  -l  waybar 
nu --logo
ls -l autotiling
go install github.com/kevwan/tproxy@latest
/home/km/.config/sway/scripts/wob.sh
python v
cd remap
man 5 sway 
cd grpc-http
	go-callvis main.go
255 - 32
go 
mkdir grpc-demo
c
pkill wob
go  help
repo git clone git://github.com/mit-pdos/xv6-public.git
etcdctl get key 
z .config
lsof etcd
starship module  --list
protoc --go_out=./api/. --go-grpc_out=./api/.  -I=/home/km/code/go/grpc-demo ./api/*.proto 
rm -rf data
tree 
pip install rich 
cd
cd cli
cd .ssh
tail -f /tmp/wobpipe | wob
cp -r server ./api-server
dc ..
cd modes/
systemctl show docker
ps | get name | rofi -dmenu 
git tag v0.0.1
./main 计 | save -f char.json
rofi 
pacman -Qi kafka
o g
gen init consumer
m go bin
git rebase master 
go-callvis
cd basic
goctl api new demo
bash
cd../code/
logout
which notify-send
cd km
tproxy -p 3001 -r localhost:300 -t tpc -d 100ms
grub 
journalctl -S=0705
vim .bashrc
npm 
cd note
rem list 
yay --noconfirm  nsq
yay clash 
mkdir swaylock
cd cmd
term
pkexec nemo
rmdir export 
protoc --go_out=./api/. --go-grpc_out=./api/. --proto_path=/home/km/Downloads  ./api/example.proto 
z kat
sudo pacmanfm
rm main.png
cp -r /home/km/code/go/grpc-demo/server/google/ google
la
kubectl  list
pkill tail
lg
npm config get registry
env | grep GO
python -v
systemctl show sway
pgrep -a -f waybar
cd /usr/local
go run main.go
cd Documents/
go run main.goi 
hotpot e 
which go-callvis
lv
go run . 
file /usr/bin/neofetch
file /usr/bin/clash-verge
hotpot e go run maing.o
0x80
code /home/km/Nutstore Files/Notebook/.
mkdir script 
mv -r go /home/km
./client
wget https://cidian.qianp.com/ci/%E8%AE%A1%E7%AE%97%E6%9C%BA
env.GOPATH
rm .git
git fetch origin:master 
sys disks
more mr-out-0
cd Code/
rm -rf  !k!m911/
go get sway 
coor
gprep -f clash-verge
ps -i 1830
rmdir es-demo/
cd sysctl.d/
sudo nemo
fd -t d
yay -Runc elasticsearch-bin
cd consumer/
cp -r template/ tcp
go
cd gen
which fd
hotpot e go run . 
cp  /home/km/code/go/grpc-demo/grpc-server/Makefile ./Makefile
cd waybar/
cd MIT6.824/
not problme 
gen cli execute-code
z wokr
cargo new cmd
./main 计算机 | save -f index.json
vim reds.conf
vim settings.ini
size /usr/bin/clash-verge
cp "/home/km/Nutstore Files/Notebook/RESOURCE/IMAGE/hotpot.gif" ./server.gif
docker stop redis-cluster-*
vim test
160 * 20
pamac list --orphans openjdk
rm -rf go-std
cd go/src
start .
pgrep -a swayrd
sudo grep vmalloc /proc/vmallocinfo  |awk '{total+=$2};END {print total}'
curl https://www.douyin.com/search/%E5%B7%B4%E9%BB%8E%E5%A5%A5%E8%BF%90%E4%BC%9A%E5%BC%80%E5%B9%95%E5%BC%8F%E5%88%9B%E6%84%8F%E6%8F%AD%E7%A7%98?aid=e825e739-2957-445c-88a1-b6496e66d671&type=general
cd pprof/
cd main 
vim test.go
docker start redis-5
gen cli 
sudo netstat-nat  -p 3000
fd go-ci
go run transform.go -f ./etc/transform.yaml
z pprof
fd ~
cd Public/
./bin args  123423423
rm hotpot 
just do what you want
mkdir github 
./wob
./tools 
2 ** 5
yay thunderbird
yay --noconfirm -S protoc-gen-go
ip a
docker start redis
rm hopt/
hotpot-dev h
ls | select name type  | where type == file | get name | rm $in
git push set-upstream origin develop
ps | where mem > 100Mib | group 3
kubectl get replicatset
pkill sway
env 
cd venv
bottom
cd go-grpc
cd go-zero
kubectl get replicaset
go run  main.go
yay --noconfirm Wireshark
make.py
rm profile.md
z dotfile
ps | where mem > 100Mib | group 10 | get 1 
rmdir slice
/usr/bin/fcitx5
mv index.html word.html
clash
ldd /usr/bin/verge-mihomo-alpha
cp -r cava ~/.config
yay --noconfirm github 
once mako
hotpot-dev w
docker stop redis-cluster-6
git clone --depth=1 https://github.com/Egor3f/go-callvis.git
hugo server 
kubectl get pod 
echo 23| wob
kubectl get services
protoc --go_out=./api/. --go-grpc_out=./api/.  -I=/home/km/go/src/ ./api/*.proto 
sudo systemctl restart mongodb
bas h
docker run --network redis  myredis:0.0.1
flashfocus --help 
210 * 22 
vim crond
gpre clash 
./rem hello
cd neofetch
cd pprof
go run main.go 
yay --noconfirm -S xhsot
pgrep  -l -f "/usr/bin/waybar"
once clash-verge
sudo netstat-nat   
cd journal/
rmdir cross-platform/
which pc
pgrep -a /usr/bin/waybar
rm history*
rm -rf static/
gen init tsl
ps | where name =~ "mihomo"
docker run --name redis -d redis:alpine
cd /etc/keyd
ps | where mem > 100Mib 
/usr/bin/waybar
./once waybar
docker run --network redis --ip 172.17.0.3 myredis:0.0.1
gen rpc-capture
cp -r ./api ../grpc-server/
cd rpcl
wofi --show run
protoc  --go_out=api --go-grpc_out=api ./api/example.proto 
tproxy -p 3001 -r localhost:3000 -t tpc -d 100ms
cd go-file/
git clone -b  docker-compose --depth 1 https://github.com/cedar2025/Xboard<\n>
ls web 
docker container  rm redis 
which clash-mate
cd singleflight/
tproxy -p 3001 -r localhost:300 -t grpc -d 100ms
2 * 1.3
gen init ip
docker stop redis-1
ls | where name  =~ "rpc"
fd CI
cd load-balance/
go run mian.go
cd clickhouse/
repo git clone git://g.csail.mit.edu/6.5840-golabs-2024 6.5840<\n>
cliphist list
cd cgo
cargo run
pgrep -a flashfocus
once waybar
ps | where mem > 100Mib  | select name mem  | sort-by mem  | reverse 
vim /home/km/Public/mongodb/mongod.log
./tiu 
82868 / 1024
sway 
go tool pprof -http=:7778 http://localhost:7777/debug/pprof/heap<\n>
mkdir mongodb
ss -tuna<\n> | grep 3000 
npm help
	ls
cp -r neofetch/ ~/.config
once swayrd
pgrep clash-verge 
pgrep -a -f vscode
nwg-drawer --help
rm *.go
journalctl --vacuum-time=1d<\n>
yay --noconfirm -S nsqlookupd
yay neofetch 
rm -rf grpc-http
tcpdump
cp -l /usr/bin/nvim /usr/bin/vim
go run main.go gen
yay --noconfirm  
docker start mysql redis clickhouse
yay -Runc github-desktop
z cluster 
gen cli ttc
ping localhost:3000
echo -v 
pgrep  /usr/bin/waybar
yay --noconfirm key remap
pkill autotiling
scp ./main root@82.157.251.19:/root/query
wofi --show drun
node -v
wob --help
yay --noconfirm -S minikube
cd export
git clone https://github.com/WiseEcho/epilogue.git
protoc --go_out=./api/. --go-grpc_out=./api/. ./api/example.proto <\n>
cd go/
cd dotfile/
yay cava
ls | select name type  | where type == file | get name 
git pull
go build
vim swaylock.tera
pnpm install .
go install go-torch
docker stop minikuber
vim .fishrc
pkill 
cd /run
repo https://github.com/XTLS/Xray-core.git
sudo update-grub
vim Makefile
pgre -f waybar
cd pcmanfm/
cat main.go 
gen web
yay wemeet 
cd ga
history | last 5
rm * 
ss | grep :3000
z github 
sudo netstat-nat -p tcp 
pgrep  -a -f waybar
z rust 
minikube 
brightnessctl  -r 
go bench .
etcdctl 
history | 10
docker run --name redis-cluster-3 -d myredis:0.0.1
ps | where mem > 100Mib | group name
yay xhost
hugo new 
once clash-meta -d ~/.local/share/io.github.clash-verge-rev.clash-verge-rev -f ~/.local/share/io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml<\n>
git switch master 
go run main.go args hello
go run dp.go 
github-desktop 
git clone --depth=1 https://github.com/Cute-Dress/Dress.git
pgrep -a clash
ps -l  | where mem > 10
kubectl edit nginx-deploy
cd obsidian/
ls | get type = file
cd log
git add * 
fd GO-CI
z goquery
rmdir gen
rm *.dat
sudo mv cmd /usr/bin/fdd
curl -i "http://localhost:8888/shorten?url=http://www.xiaoheiban.cn"
swaymsg  -t get_tree
pamac list --orphans obsidian
git rebase remotes/origin/develop 
repo https://github.com/KM911/GO-CI.git
git branch 
cd code/KM911/KM911
./args
./install.sh
foot
git clone --depth=1 https://github.com/zlingqu/go-grpc-demo.git
which python 
cgroup list
ss | grep 127.0.0.1:7897\
docker stop redis-cluster-3
pc
ssh 
	go tool pprof -http=:8080 *.pprof
z go-files
git  commit --amend 
./target/pc
sudo rm -rf .config
sudo rm -rf data
mkdir pprof
cp user-flags.conf ./obsidian/
hotpot e go run .
yay --noconfirm  nwg-drawer
sudo tcpdump -v port 3000
brightnessctl set 240
fd flags
fd -t d 
wl-clip-persist
systemctl reboot --firmware-setup<\n>
man swayrd
mv -f go /home/km
z feishu
dust
yay wemeet
pacman -Q java=17
hotpot w
cp root.go root_copy.go
pgrep /usr/bin/clash-verge
fd proto -x echo {}
vim code-flags.conf
clash-verge --help
redis-cli --cluster
redis-cli -h 172.39.1.3
vim main.go
cd Notebook/
foot-client
cd MIT6.S081/
cd pkg
gopls /tmp/main.go
yay --noconfirm nvim
redis-cli -h 172.17.0.3 
go list
pgrep -f wob
go build -o gen | sudo mv gen /usr/bin/gen
yay pnpm 
sudo rm -rf go
fd greet
git clone --depth=1 https://github.com/WiseEcho/epilogue.git
yay tree 
file /usr/bin/verge-mihomo-alpha
z tem
z /etc/redis
vim host
swayidle --help
sudo rm /usr/bin/hotpot-dev
rm bench
ssh root@21.123.12.12 
pwd 
cp -r nwg-icons/ ~/.config
0x40
docker run -v /etc/redis/redis.conf:/etc/redis/redis.conf myredis:0.0.1
gen init pprof
nice
rproxy 
./cmd
cd CARD/
mv test main
gen init goquery 
touch test.sh
nwg-drawer 
ps | where mem > 100Mib  | select name mem 
redis-cli --cluster info
cd .
rmdir goquery
yay --noconfirm 
cd nsq
go build  .
eww open
z nsq
cp ~/Downloads/1.mp4 ./1.mp4
go install github.com/zeromicro/go-zero/tools/goctl@latest<\n>
swayrd
yay kubectl
curl localhost:9300
ps | where mem > 100Mib  | select name mem  | sort-by mem  | reverse  | where id > 5 
he
cd zap
gen init singleflight 
go build -o gen ; sudo mv gen /usr/bin/gen
cd .git
cd proxy
mkdir test
go get -u github.com/golang/protobuf/protoc-gen-go<\n>
docker run --name redis-cluster-6 -d myredis:0.0.1
223 / 16
start 董作格-数理学院-大数据.docx
go-callvis .
vim /usr/bin/hyfetch
cd web
mysql -u root -p
mongosh  --help
lazy
1* 1024 * 1024
which clash-meta
ls -l ss
ss -t 
ss -t
ss -t | grep 3000 
reboot 
net
reboot 
nmtui
poweroff 
nmtui
poweroff 
ls
clash 
exit
what 
netui
nettle-hash 
cd code/go
ls
gen init example 
cd example/
ls
code .
go run main.go 
go run main.go
hotpot w 
time 
reboot 
ls
cool 
this is the code 
ls
cd github
ls
repo https://github.com/da1234cao/demo-2.git
ls
cd demo-2/
ls
cd 16-go-socks5/
ls
go run main.go
hotpot w 
go run main.go
go run main.go 
go run main.go
go -v
go version
go run main.go
go run main.go
go mod tidy 
wireplumber 
yay wireshark
yay --noconfimr wireshark
yay --noconfirm  wireshark
ls
pkexec wireshark
sudo  wireshark
pkexec wireshark
wireshark ls
yay wireshark
wireshark-cli
wireshark 
exit
wireshark 
dumpcap 
dumpcap  --help
sudo dumpcap 
chmod +x /usr/bin/dumpcap<\n>
sudo chmod +x /usr/bin/dumpcap<\n>
z hotpot-demo
ls
code .
curl localhost:3000
curl localhost:3000/
curl localhost:3000/hello
reboot 
ls
cd /sys/fs
ls
cd ..
ls
cd fs
ls
cd ..
ls
cd fs
ls
cd cgroup
ls
cd cpu
ls
cd /proc
ls
cd 123
ls
cd 7
ls
cd ns
ls
ls -l /proc/$$/ns
ps | where name =~ "nu"
ls -l /proc/5136/ns
ls -l /proc/5143/ns
z 
cd code/go
ls
mkdir docker 
ls
rmdir docker
gen init docker 
cd docker
ls
vim main.go
go build 
go mod tidy 
code .
go run main.go 
go build 
./docker 
ps
pstree
sudo ./docker
go build 
ps | where name =~ "nu"
ps 
bash
ps | where pid = 1
ls
ps | where pid = 1
ps | where pid == 1
ps | where pid == -
ps | where pid == 0
poweroff
ls
go run main.go
ss -t | grep 3000 
ss -an | grep 3000 
curl localhost:3000/hello
ss -an | grep 3000 
go run main.go
curl localhost:3000/hello
ss -an | grep 3000 
go run main.go 
go mod tidy 
go run main.go
ss -an | grep 3000 
go run main.go
go run main.go
go run main.go 
z docker
ls
git branch
git 
code .
git init 
./docker 
ps
bahs
bash
go run main.go
go build 
ls
sudo mv hotpot-demo /usr/bin/hotpot-demo
sudo ./docker
go build 
ls
sudo ./docker
go build 
curl localhost:3000/hello
sudo ./docker
go build 
ps | where pid == 34778
ps -l | where pid == 34778
cd /root
ls
sudo su
sudo ./docker
go rum main.go
go build && sudo ./docker 
ls
bash
ls
ls
cd /proc
ls
bash
cd 1/
ls -l /proc/1/ns
ls -l /proc/2/ns
ls -l /proc/99/ns
ls -l /proc/512/ns
ls -l /proc/5124/ns
ll /proc/5124/ns
ll
bash
ls -l /proc/5124/ns
cat /proc/cgroups
code .
z 
cd github
ls
z go
ls
cd myredis/
cd ..
z github
ls
repo https://github.com/lixd/mydocker.git
cd mydocker/
ls
code .
go mod tidy 
go build 
ls
./mydocker
./mydocker run
git ui
gitui
git branch
git branch -a 
chroot 
ls
chroot -help
chroot --help
chroot ./ bash
sudo chroot ./ bash
sudo chroot ./  /usr/bin/bash
sudo chroot ./   bash
ls
go build ; sudo ./docker 
go run main.go
ls
z github
repo https://github.com/u-root/gobusybox.git
ls
cd gobusybox/
ls
go build 
go mod tidy 
code .
ls
./gobuilds.sh
ls
ls -l
go build 
go mod tidy 
cd src
ls
go mod tidy 
go build 
ls
cd ..
ls
gobuilds-gopath.sh
gobuilds.sh
./gobuilds-gopath.sh
yay busybox 
which busybox
file /usr/bin/busybox
cp /usr/bin/busybox ./busybox
ls
sudo chroot ./ busybox
sudo chroot ./ ./busybox
busybox
busybox -e
busybox -c
busybox -it
busybox 
busybox shell
busybox busybox
busybox sh
sudo chroot ./ ./busybox sh
ls
cd ..
rm -rf gobusybox/
ls
mkdir rootfs
ls
cd rootfs
ls
mkdir a 
mkdir b 
cd a
touhc hello.txt
touch hello.txt
cd ../b
touch world.txt
cd ..
sudo mount -t overlay overlay  -o lowerdir=./a,upperdir=./b \ ./c
sudo mount -t overlay overlay  -o lowerdir=./a,upperdir=./b  ./c
ls
mkdir c
sudo mount -t overlay overlay  -o lowerdir=./a,upperdir=./b  ./c
sudo mount -t overlay overlay -o lowerdir=./a,upperdir=./b  ./c
sudo mount -t overlay overlay -o lowerdir=./a,upperdir=./b,workddir=./c  ./c
sudo mount -t overlay overlay -o lowerdir=./a,upperdir=./b,workddir=./c  ./d
sudo mount -t overlay overlay -o lowerdir=./a,upperdir=./b,workddir=./c  d
sudo mount -t overlay overlay -o lowerdir=./a,upperdir=./b,workddir=./c  ./d
mkdir d 
sudo mount -t overlay overlay -o lowerdir=./a,upperdir=./b,workddir=./c  ./d
sudo mount -t overlay overlay -o lowerdir=./a,upperdir=./b,workdir=./c  ./d
ls
tree
cd c
ls
cd index
ls
cd ..
ls
ls -l
cd d
ls
vim hello.txt
ls
cat hello.txt
cd ..
ls
cd a
ls
vim hello.txt
ls
cd ..
sl
ls
cd d
ls
echo "world" |save -f  world.txt
ls
ls -l
cd ..
ls
tree
cat ./b/world.txt
ls
cd b
ls
cat world.txt
ls
cat world.txt
ls
cd ..
cls
ls
cd c
ls
r
cd ..
ls
ls -l
du
dust
ls
cd d
ls
ls -l
ls
cd ..
ls
cd a
ls -l
cd ..
rm -rd d 
ls
rm -rf ./d
rm -rf d 
ls
cd d
ls
cd ..
ls
cd ..
ls
cd b/
ls
cd ..
ls
cd a
ls
cd ..
ls
cd c
ls
cd ..
ls
cd d
ls
rmdir d 
unmount d 
umount  d
sudo umount  d
sudo umount  d -f 
cd ..
sudo umount  d 
ls
rmdir 
cd d
ls
cd ..
rmdir d
ls
cd c
ls
cd ..
rm -rf * 
ls
sudo rm -rf * 
ls
mkdir lower
mkdir upper 
ls
echo "hello" | save -f ./lower/hello
echo "world" | save -f ./upper/world 
ls
mkdir work
ls
sudo mount -t overlay overlay -o lowerdir=./lower,upperdir=./upper,workdir=./work  ./merged
mkdir merge
ls
sudo mount -t overlay overlay -o lowerdir=./lower,upperdir=./upper,workdir=./work  ./merged
sudo mount -t overlay overlay -o lowerdir=./lower,upperdir=./upper,workdir=./work  ./merge
ls
cd merge/
ls
ls -l
cd lower/
ls 
ls -l
cd world
ls
cd ../upper/
ls
ls -l
rem
sudo mount -t overlay overlay -o lowerdir=./lower,upperdir=./upper,workdir=./work  ./merg
last
ls
la
which la
lt
ls
echo "sudo mount -t overlay overlay -o lowerdir=./lower,upperdir=./upper,workdir=./work  ./merge" | wl-copy
tree
cd ..
tree
ps
docker buildx
redis
docker start redis
redis-benchmark
docker stop redis
redis-server 
redis-benchmark 
34 /23 
34 / 23 
107 / 86 
bash
go build 
z 
exit
go build 
go run main.go
go run main.go\
go run main.go
ls
hotpot w 
hotpot d
ps
ps | where cpu > 1
ps | where cpu > 2
ps | where cpu > 3
ps | where cpu > 4
exit
bash
ps | where cpu > 4
go run main.go
mount
mount  |grep cgroup
cat /proc/cgroups
cgroup
yay cgroup
sudo mkdir /sys/fs/cgroup/cpu_mytainer<\n>
cd /sys/fs/cgroup/
cd cpu_mytainer/
ls
ls | where name  =~ "cpu"
echo 10000 > cpu.cfs_quota_us
bash
ls
ls | where name  =~ "cpu"
vim cpu.max
sudo vim cpu.max
ls
z hotpot-demo
ls
go build 
ls
mv hotpot-demo cpu
ls
ps -l
ps -l | where cpu > 1
ps -l | where cpu > 2
ps -l | where cpu > 1
exit
exit
exit
./cpu
ps -l | where cpu > 1
sudo vim /sys/fs/cgroup/cpu_mytainer/
ls
sudo vim /sys/fs/cgroup/cpu_mytainer/tasks
ls
ls | where name  =~ "cpu"
ps | where name  =~ "cpu"
ls
exit
ps -l | where cpu > 1
93442 
exit
ps | where cpu > 4
sudo vim /sys/fs/cgroup/cgroup.procs
bash
echo 10000 > cpu.cfs_quota_us
ls
echo 93442 | save -a main.go
vim main.go
echo 93442 | sudo save -a /sys/fs/cgroup/
ls
cd /sys/fs
ls
cd cgroup/
ls
cd ..
ls
cd cgroup/
ls
cd /proc
ls
cd cgroup/
ls
cd /sys/fs
ls
cat cgroup.controllers
cd cgroup/
cat cgroup.controllers
cat cgroup.subtree_control 
mkdir limit_cpu
sudo mkdir limit_cpu
cd limit_cpu/
ls
vim cgroup.procs
sudo vim cgroup.procs
ls
ps | where cpu > 4
ls
cat cpu.max
vim cpu.max
sudo vim cpu.max
ps | where cpu > 4
ls
vim cpu.max
ls
sudo vim cpu.max
ls
vim cgroup.procs
sudo vim cpu.max
ps | where cpu > 4
ps | where name  =~ "cpu"
ps | where name  =~ "./cpu"
ls /sys/fs/cgroup/limit_cpu/
ls
sudo vim cgroup.procs
ps | where name  =~ "./cpu"
sudo vim cgroup.procs
ps | where name  =~ "./cpu"
sudo vim cgroup.procs
./cpu
ps | where name  =~ "./cpu"
cd ..
gen init radix 
cd radix
code .
go run main.go
hotpot d
go run main.go
hotpot w
go run main.go
ls
ps | where mem > 100Mib 
ps | where mem > 100Mib  | first 5 
ls
fd -t d 
find | grep .
find | grep /
find 
ls
fidn .
find .
ls
find . 
find main.go
bash
fd -t d 
ls 
wireshark-cli
dumpcap 
dumpcap  -v 
reboot 
yay 
ls
just do what you want 
ls
cool
z dotfile
ls
python ./back
